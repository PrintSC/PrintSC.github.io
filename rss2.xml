<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"
  xmlns:atom="http://www.w3.org/2005/Atom"
  xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>ShiC&#39;s cool</title>
    <link>http://shicheng.cool/</link>
    
    <atom:link href="http://shicheng.cool/rss2.xml" rel="self" type="application/rss+xml"/>
    
    <description>Think little，Do more</description>
    <pubDate>Tue, 21 Dec 2021 02:47:17 GMT</pubDate>
    <generator>http://hexo.io/</generator>
    
    <item>
      <title>Mysql的使用</title>
      <link>http://shicheng.cool/2021/12/21/mysql%E9%AB%98%E7%BA%A7/</link>
      <guid>http://shicheng.cool/2021/12/21/mysql%E9%AB%98%E7%BA%A7/</guid>
      <pubDate>Tue, 21 Dec 2021 02:47:36 GMT</pubDate>
      
        
        
      <description>&lt;h2 id=&quot;mysql高级&quot;&gt;&lt;a href=&quot;#mysql高级&quot; class=&quot;headerlink&quot; title=&quot;mysql高级&quot;&gt;&lt;/a&gt;mysql高级&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;今日目标&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p</description>
        
      
      
      
      <content:encoded><![CDATA[<h2 id="mysql高级"><a href="#mysql高级" class="headerlink" title="mysql高级"></a>mysql高级</h2><p><strong>今日目标</strong></p><blockquote><ul><li><p>掌握约束的使用</p></li><li><p>掌握表关系及建表原则</p></li><li><p>重点掌握多表查询操作</p></li><li><p>掌握事务操作</p></li></ul></blockquote><h2 id="1，约束"><a href="#1，约束" class="headerlink" title="1，约束"></a>1，约束</h2><img src="/2021/12/21/mysql%E9%AB%98%E7%BA%A7/image-20210724104749122.png" alt="image-20210724104749122" style="zoom:70%;"><p>上面表中可以看到表中数据存在一些问题：</p><ul><li><p>id 列一般是用标示数据的唯一性的，而上述表中的id为1的有三条数据，并且 <code>马花疼</code> 没有id进行标示</p></li><li><p><code>柳白</code> 这条数据的age列的数据是3000，而人也不可能活到3000岁</p></li><li><p><code>马运</code>  这条数据的math数学成绩是-5，而数学学得再不好也不可能出现负分</p></li><li><p><code>柳青</code> 这条数据的english列（英文成绩）值为null，而成绩即使没考也得是0分</p></li></ul><p>针对上述数据问题，我们就可以从数据库层面在添加数据的时候进行限制，这个就是约束。</p><h3 id="1-1-概念"><a href="#1-1-概念" class="headerlink" title="1.1  概念"></a>1.1  概念</h3><ul><li><p>约束是作用于表中列上的规则，用于限制加入表的数据</p><p>例如：我们可以给id列加约束，让其值不能重复，不能为null值。</p></li><li><p>约束的存在保证了数据库中数据的正确性、有效性和完整性</p><p>添加约束可以在添加数据的时候就限制不正确的数据，年龄是3000，数学成绩是-5分这样无效的数据，继而保障数据的完整性。</p></li></ul><h3 id="1-2-分类"><a href="#1-2-分类" class="headerlink" title="1.2  分类"></a>1.2  分类</h3><ul><li> <strong>非空约束： 关键字是 NOT NULL</strong></li></ul><p>  保证列中所有的数据不能有null值。</p><p>  例如：id列在添加 <code>马花疼</code> 这条数据时就不能添加成功。</p><ul><li><p><strong>唯一约束：关键字是  UNIQUE</strong></p><p>保证列中所有数据各不相同。</p><p>例如：id列中三条数据的值都是1，这样的数据在添加时是绝对不允许的。</p></li><li><p> <strong>主键约束： 关键字是  PRIMARY KEY</strong></p></li></ul><p>  主键是一行数据的唯一标识，要求非空且唯一。一般我们都会给没张表添加一个主键列用来唯一标识数据。</p><p>  例如：上图表中id就可以作为主键，来标识每条数据。那么这样就要求数据中id的值不能重复，不能为null值。</p><ul><li><p><strong>检查约束： 关键字是  CHECK</strong> </p><p>保证列中的值满足某一条件。</p><p>例如：我们可以给age列添加一个范围，最低年龄可以设置为1，最大年龄就可以设置为300，这样的数据才更合理些。</p><blockquote><p>注意：MySQL不支持检查约束。</p><p>这样是不是就没办法保证年龄在指定的范围内了？从数据库层面不能保证，以后可以在java代码中进行限制，一样也可以实现要求。</p></blockquote></li><li><p><strong>默认约束： 关键字是   DEFAULT</strong></p><p>保存数据时，未指定值则采用默认值。</p><p>例如：我们在给english列添加该约束，指定默认值是0，这样在添加数据时没有指定具体值时就会采用默认给定的0。</p></li><li><p><strong>外键约束： 关键字是  FOREIGN KEY</strong></p><p>外键用来让两个表的数据之间建立链接，保证数据的一致性和完整性。</p><p>外键约束现在可能还不太好理解，后面我们会重点进行讲解。</p></li></ul><h3 id="1-3-非空约束"><a href="#1-3-非空约束" class="headerlink" title="1.3  非空约束"></a>1.3  非空约束</h3><ul><li><p>概念</p><p>非空约束用于保证列中所有数据不能有NULL值</p></li><li><p>语法</p><ul><li><p>添加约束</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 创建表时添加非空约束</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> 表名(</span><br><span class="line">   列名 数据类型 <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line">   …</span><br><span class="line">); </span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 建完表后添加非空约束</span></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> 表名 MODIFY 字段名 数据类型 <span class="keyword">NOT</span> <span class="keyword">NULL</span>;</span><br></pre></td></tr></table></figure></li><li><p>删除约束</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> 表名 MODIFY 字段名 数据类型;</span><br></pre></td></tr></table></figure></li></ul></li></ul><h3 id="1-4-唯一约束"><a href="#1-4-唯一约束" class="headerlink" title="1.4  唯一约束"></a>1.4  唯一约束</h3><ul><li><p>概念</p><p>唯一约束用于保证列中所有数据各不相同</p></li><li><p>语法</p><ul><li><p>添加约束</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 创建表时添加唯一约束</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> 表名(</span><br><span class="line">   列名 数据类型 <span class="keyword">UNIQUE</span> [AUTO_INCREMENT],</span><br><span class="line">   <span class="comment">-- AUTO_INCREMENT: 当不指定值时自动增长</span></span><br><span class="line">   …</span><br><span class="line">); </span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> 表名(</span><br><span class="line">   列名 数据类型,</span><br><span class="line">   …</span><br><span class="line">   [<span class="keyword">CONSTRAINT</span>] [约束名称] <span class="keyword">UNIQUE</span>(列名)</span><br><span class="line">); </span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 建完表后添加唯一约束</span></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> 表名 MODIFY 字段名 数据类型 <span class="keyword">UNIQUE</span>;</span><br></pre></td></tr></table></figure></li><li><p>删除约束</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> 表名 <span class="keyword">DROP</span> INDEX 字段名;</span><br></pre></td></tr></table></figure></li></ul></li></ul><h3 id="1-5-主键约束"><a href="#1-5-主键约束" class="headerlink" title="1.5  主键约束"></a>1.5  主键约束</h3><ul><li><p>概念</p><p>主键是一行数据的唯一标识，要求非空且唯一</p><p>一张表只能有一个主键</p></li><li><p>语法</p><ul><li><p>添加约束</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 创建表时添加主键约束</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> 表名(</span><br><span class="line">   列名 数据类型 <span class="keyword">PRIMARY</span> KEY [AUTO_INCREMENT],</span><br><span class="line">   …</span><br><span class="line">); </span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> 表名(</span><br><span class="line">   列名 数据类型,</span><br><span class="line">   [<span class="keyword">CONSTRAINT</span>] [约束名称] <span class="keyword">PRIMARY</span> KEY(列名)</span><br><span class="line">); </span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 建完表后添加主键约束</span></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> 表名 <span class="keyword">ADD</span> <span class="keyword">PRIMARY</span> KEY(字段名);</span><br></pre></td></tr></table></figure></li><li><p>删除约束</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> 表名 <span class="keyword">DROP</span> <span class="keyword">PRIMARY</span> KEY;</span><br></pre></td></tr></table></figure></li></ul></li></ul><h3 id="1-6-默认约束"><a href="#1-6-默认约束" class="headerlink" title="1.6  默认约束"></a>1.6  默认约束</h3><ul><li><p>概念</p><p>保存数据时，未指定值则采用默认值</p></li><li><p>语法</p><ul><li><p>添加约束</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 创建表时添加默认约束</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> 表名(</span><br><span class="line">   列名 数据类型 <span class="keyword">DEFAULT</span> 默认值,</span><br><span class="line">   …</span><br><span class="line">); </span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 建完表后添加默认约束</span></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> 表名 <span class="keyword">ALTER</span> 列名 <span class="keyword">SET</span> <span class="keyword">DEFAULT</span> 默认值;</span><br></pre></td></tr></table></figure></li><li><p>删除约束</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> 表名 <span class="keyword">ALTER</span> 列名 <span class="keyword">DROP</span> <span class="keyword">DEFAULT</span>;</span><br></pre></td></tr></table></figure></li></ul></li></ul><h3 id="1-7-约束练习"><a href="#1-7-约束练习" class="headerlink" title="1.7  约束练习"></a>1.7  约束练习</h3><p><strong>根据需求，为表添加合适的约束</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 员工表</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> emp (</span><br><span class="line">id <span class="type">INT</span>,  <span class="comment">-- 员工id，主键且自增长</span></span><br><span class="line">    ename <span class="type">VARCHAR</span>(<span class="number">50</span>), <span class="comment">-- 员工姓名，非空且唯一</span></span><br><span class="line">    joindate <span class="type">DATE</span>,  <span class="comment">-- 入职日期，非空</span></span><br><span class="line">    salary <span class="keyword">DOUBLE</span>(<span class="number">7</span>,<span class="number">2</span>),  <span class="comment">-- 工资，非空</span></span><br><span class="line">    bonus <span class="keyword">DOUBLE</span>(<span class="number">7</span>,<span class="number">2</span>)  <span class="comment">-- 奖金，如果没有将近默认为0</span></span><br><span class="line">);</span><br></pre></td></tr></table></figure><p>上面一定给出了具体的要求，我们可以根据要求创建这张表，并为每一列添加对应的约束。建表语句如下：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> IF <span class="keyword">EXISTS</span> emp;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 员工表</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> emp (</span><br><span class="line">  id <span class="type">INT</span> <span class="keyword">PRIMARY</span> KEY, <span class="comment">-- 员工id，主键且自增长</span></span><br><span class="line">  ename <span class="type">VARCHAR</span>(<span class="number">50</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">UNIQUE</span>, <span class="comment">-- 员工姓名，非空并且唯一</span></span><br><span class="line">  joindate <span class="type">DATE</span> <span class="keyword">NOT</span> <span class="keyword">NULL</span> , <span class="comment">-- 入职日期，非空</span></span><br><span class="line">  salary <span class="keyword">DOUBLE</span>(<span class="number">7</span>,<span class="number">2</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> , <span class="comment">-- 工资，非空</span></span><br><span class="line">  bonus <span class="keyword">DOUBLE</span>(<span class="number">7</span>,<span class="number">2</span>) <span class="keyword">DEFAULT</span> <span class="number">0</span> <span class="comment">-- 奖金，如果没有奖金默认为0</span></span><br><span class="line">);</span><br></pre></td></tr></table></figure><p>通过上面语句可以创建带有约束的 <code>emp</code> 表，约束能不能发挥作用呢。接下来我们一一进行验证，先添加一条没有问题的数据</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> emp(id,ename,joindate,salary,bonus) <span class="keyword">values</span>(<span class="number">1</span>,<span class="string">&#x27;张三&#x27;</span>,<span class="string">&#x27;1999-11-11&#x27;</span>,<span class="number">8800</span>,<span class="number">5000</span>);</span><br></pre></td></tr></table></figure><ul><li><strong>验证主键约束，非空且唯一</strong></li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> emp(id,ename,joindate,salary,bonus) <span class="keyword">values</span>(<span class="keyword">null</span>,<span class="string">&#x27;张三&#x27;</span>,<span class="string">&#x27;1999-11-11&#x27;</span>,<span class="number">8800</span>,<span class="number">5000</span>);</span><br></pre></td></tr></table></figure><p>执行结果如下：</p><img src="/2021/12/21/mysql%E9%AB%98%E7%BA%A7/image-20210724114548170.png" alt="image-20210724114548170" style="zoom:80%;"><p>从上面的结果可以看到，字段 <code>id</code> 不能为null。那我们重新添加一条数据，如下：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> emp(id,ename,joindate,salary,bonus) <span class="keyword">values</span>(<span class="number">1</span>,<span class="string">&#x27;张三&#x27;</span>,<span class="string">&#x27;1999-11-11&#x27;</span>,<span class="number">8800</span>,<span class="number">5000</span>);</span><br></pre></td></tr></table></figure><p>执行结果如下：</p><img src="/2021/12/21/mysql%E9%AB%98%E7%BA%A7/image-20210724114805350.png" alt="image-20210724114805350" style="zoom:80%;"><p>从上面结果可以看到，1这个值重复了。所以主键约束是用来限制数据非空且唯一的。那我们再添加一条符合要求的数据</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> emp(id,ename,joindate,salary,bonus) <span class="keyword">values</span>(<span class="number">2</span>,<span class="string">&#x27;李四&#x27;</span>,<span class="string">&#x27;1999-11-11&#x27;</span>,<span class="number">8800</span>,<span class="number">5000</span>);</span><br></pre></td></tr></table></figure><p>执行结果如下：</p><img src="/2021/12/21/mysql%E9%AB%98%E7%BA%A7/image-20210724115024106.png" alt="image-20210724115024106" style="zoom:80%;"><ul><li><strong>验证非空约束</strong></li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> emp(id,ename,joindate,salary,bonus) <span class="keyword">values</span>(<span class="number">3</span>,<span class="keyword">null</span>,<span class="string">&#x27;1999-11-11&#x27;</span>,<span class="number">8800</span>,<span class="number">5000</span>);</span><br></pre></td></tr></table></figure><p>执行结果如下：</p><img src="/2021/12/21/mysql%E9%AB%98%E7%BA%A7/image-20210724115149415.png" alt="image-20210724115149415" style="zoom:80%;"><p>从上面结果可以看到，<code>ename</code> 字段的非空约束生效了。</p><ul><li><strong>验证唯一约束</strong></li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> emp(id,ename,joindate,salary,bonus) <span class="keyword">values</span>(<span class="number">3</span>,<span class="string">&#x27;李四&#x27;</span>,<span class="string">&#x27;1999-11-11&#x27;</span>,<span class="number">8800</span>,<span class="number">5000</span>);</span><br></pre></td></tr></table></figure><p>执行结果如下：</p><img src="/2021/12/21/mysql%E9%AB%98%E7%BA%A7/image-20210724115336916.png" alt="image-20210724115336916" style="zoom:80%;"><p>从上面结果可以看到，<code>ename</code> 字段的唯一约束生效了。</p><ul><li><strong>验证默认约束</strong></li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> emp(id,ename,joindate,salary) <span class="keyword">values</span>(<span class="number">3</span>,<span class="string">&#x27;王五&#x27;</span>,<span class="string">&#x27;1999-11-11&#x27;</span>,<span class="number">8800</span>);</span><br></pre></td></tr></table></figure><p>执行完上面语句后查询表中数据，如下图可以看到王五这条数据的bonus列就有了默认值0。</p><img src="/2021/12/21/mysql%E9%AB%98%E7%BA%A7/image-20210724115547951.png" alt="image-20210724115547951" style="zoom:80%;"><p>==注意：默认约束只有在不给值时才会采用默认值。如果给了null，那值就是null值。==</p><p>如下：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> emp(id,ename,joindate,salary,bonus) <span class="keyword">values</span>(<span class="number">4</span>,<span class="string">&#x27;赵六&#x27;</span>,<span class="string">&#x27;1999-11-11&#x27;</span>,<span class="number">8800</span>,<span class="keyword">null</span>);</span><br></pre></td></tr></table></figure><p>执行完上面语句后查询表中数据，如下图可以看到赵六这条数据的bonus列的值是null。</p><img src="/2021/12/21/mysql%E9%AB%98%E7%BA%A7/image-20210724115826516.png" alt="image-20210724115826516" style="zoom:80%;"><ul><li><strong>验证自动增长： auto_increment  当列是数字类型 并且唯一约束</strong></li></ul><p>重新创建 <code>emp</code> 表，并给id列添加自动增长</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 员工表</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> emp (</span><br><span class="line">  id <span class="type">INT</span> <span class="keyword">PRIMARY</span> KEY auto_increment, <span class="comment">-- 员工id，主键且自增长</span></span><br><span class="line">  ename <span class="type">VARCHAR</span>(<span class="number">50</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">UNIQUE</span>, <span class="comment">-- 员工姓名，非空并且唯一</span></span><br><span class="line">  joindate <span class="type">DATE</span> <span class="keyword">NOT</span> <span class="keyword">NULL</span> , <span class="comment">-- 入职日期，非空</span></span><br><span class="line">  salary <span class="keyword">DOUBLE</span>(<span class="number">7</span>,<span class="number">2</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> , <span class="comment">-- 工资，非空</span></span><br><span class="line">  bonus <span class="keyword">DOUBLE</span>(<span class="number">7</span>,<span class="number">2</span>) <span class="keyword">DEFAULT</span> <span class="number">0</span> <span class="comment">-- 奖金，如果没有奖金默认为0</span></span><br><span class="line">);</span><br></pre></td></tr></table></figure><p>接下来给emp添加数据，分别验证不给id列添加值以及给id列添加null值，id列的值会不会自动增长：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> emp(ename,joindate,salary,bonus) <span class="keyword">values</span>(<span class="string">&#x27;赵六&#x27;</span>,<span class="string">&#x27;1999-11-11&#x27;</span>,<span class="number">8800</span>,<span class="keyword">null</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> emp(id,ename,joindate,salary,bonus) <span class="keyword">values</span>(<span class="keyword">null</span>,<span class="string">&#x27;赵六2&#x27;</span>,<span class="string">&#x27;1999-11-11&#x27;</span>,<span class="number">8800</span>,<span class="keyword">null</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> emp(id,ename,joindate,salary,bonus) <span class="keyword">values</span>(<span class="keyword">null</span>,<span class="string">&#x27;赵六3&#x27;</span>,<span class="string">&#x27;1999-11-11&#x27;</span>,<span class="number">8800</span>,<span class="keyword">null</span>);</span><br></pre></td></tr></table></figure><h3 id="1-8-外键约束"><a href="#1-8-外键约束" class="headerlink" title="1.8  外键约束"></a>1.8  外键约束</h3><h4 id="1-8-1-概述"><a href="#1-8-1-概述" class="headerlink" title="1.8.1  概述"></a>1.8.1  概述</h4><p>外键用来让两个表的数据之间建立链接，保证数据的一致性和完整性。</p><p>如何理解上面的概念呢？如下图有两张表，员工表和部门表：</p><img src="/2021/12/21/mysql%E9%AB%98%E7%BA%A7/image-20210724120904180.png" alt="image-20210724120904180" style="zoom:80%;"><p>员工表中的dep_id字段是部门表的id字段关联，也就是说1号学生张三属于1号部门研发部的员工。现在我要删除1号部门，就会出现错误的数据（员工表中属于1号部门的数据）。而我们上面说的两张表的关系只是我们认为它们有关系，此时需要通过外键让这两张表产生数据库层面的关系，这样你要删除部门表中的1号部门的数据将无法删除。</p><h4 id="1-8-2-语法"><a href="#1-8-2-语法" class="headerlink" title="1.8.2  语法"></a>1.8.2  语法</h4><ul><li>添加外键约束</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 创建表时添加外键约束</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> 表名(</span><br><span class="line">   列名 数据类型,</span><br><span class="line">   …</span><br><span class="line">   [<span class="keyword">CONSTRAINT</span>] [外键名称] <span class="keyword">FOREIGN</span> KEY(外键列名) <span class="keyword">REFERENCES</span> 主表(主表列名) </span><br><span class="line">); </span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 建完表后添加外键约束</span></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> 表名 <span class="keyword">ADD</span> <span class="keyword">CONSTRAINT</span> 外键名称 <span class="keyword">FOREIGN</span> KEY (外键字段名称) <span class="keyword">REFERENCES</span> 主表名称(主表列名称);</span><br></pre></td></tr></table></figure><ul><li>删除外键约束</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> 表名 <span class="keyword">DROP</span> <span class="keyword">FOREIGN</span> KEY 外键名称;</span><br></pre></td></tr></table></figure><h4 id="1-8-3-练习"><a href="#1-8-3-练习" class="headerlink" title="1.8.3  练习"></a>1.8.3  练习</h4><p>根据上述语法创建员工表和部门表，并添加上外键约束：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 删除表</span></span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> IF <span class="keyword">EXISTS</span> emp;</span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> IF <span class="keyword">EXISTS</span> dept;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 部门表</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> dept(</span><br><span class="line">id <span class="type">int</span> <span class="keyword">primary</span> key auto_increment,</span><br><span class="line">dep_name <span class="type">varchar</span>(<span class="number">20</span>),</span><br><span class="line">addr <span class="type">varchar</span>(<span class="number">20</span>)</span><br><span class="line">);</span><br><span class="line"><span class="comment">-- 员工表 </span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> emp(</span><br><span class="line">id <span class="type">int</span> <span class="keyword">primary</span> key auto_increment,</span><br><span class="line">name <span class="type">varchar</span>(<span class="number">20</span>),</span><br><span class="line">age <span class="type">int</span>,</span><br><span class="line">dep_id <span class="type">int</span>,</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 添加外键 dep_id,关联 dept 表的id主键</span></span><br><span class="line"><span class="keyword">CONSTRAINT</span> fk_emp_dept <span class="keyword">FOREIGN</span> KEY(dep_id) <span class="keyword">REFERENCES</span> dept(id)</span><br><span class="line">);</span><br></pre></td></tr></table></figure><p>添加数据</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 添加 2 个部门</span></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> dept(dep_name,addr) <span class="keyword">values</span></span><br><span class="line">(<span class="string">&#x27;研发部&#x27;</span>,<span class="string">&#x27;广州&#x27;</span>),(<span class="string">&#x27;销售部&#x27;</span>, <span class="string">&#x27;深圳&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 添加员工,dep_id 表示员工所在的部门</span></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> emp (NAME, age, dep_id) <span class="keyword">VALUES</span> </span><br><span class="line">(<span class="string">&#x27;张三&#x27;</span>, <span class="number">20</span>, <span class="number">1</span>),</span><br><span class="line">(<span class="string">&#x27;李四&#x27;</span>, <span class="number">20</span>, <span class="number">1</span>),</span><br><span class="line">(<span class="string">&#x27;王五&#x27;</span>, <span class="number">20</span>, <span class="number">1</span>),</span><br><span class="line">(<span class="string">&#x27;赵六&#x27;</span>, <span class="number">20</span>, <span class="number">2</span>),</span><br><span class="line">(<span class="string">&#x27;孙七&#x27;</span>, <span class="number">22</span>, <span class="number">2</span>),</span><br><span class="line">(<span class="string">&#x27;周八&#x27;</span>, <span class="number">18</span>, <span class="number">2</span>);</span><br></pre></td></tr></table></figure><p>此时删除 <code>研发部</code> 这条数据，会发现无法删除。</p><p>删除外键</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> emp <span class="keyword">drop</span> <span class="keyword">FOREIGN</span> key fk_emp_dept;</span><br></pre></td></tr></table></figure><p>重新添加外键</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> emp <span class="keyword">add</span> <span class="keyword">CONSTRAINT</span> fk_emp_dept <span class="keyword">FOREIGN</span> key(dep_id) <span class="keyword">REFERENCES</span> dept(id);</span><br></pre></td></tr></table></figure><h2 id="2，数据库设计"><a href="#2，数据库设计" class="headerlink" title="2，数据库设计"></a>2，数据库设计</h2><h3 id="2-1-数据库设计简介"><a href="#2-1-数据库设计简介" class="headerlink" title="2.1  数据库设计简介"></a>2.1  数据库设计简介</h3><ul><li><p>软件的研发步骤</p><img src="/2021/12/21/mysql%E9%AB%98%E7%BA%A7/image-20210724130925801.png" alt="image-20210724130925801" style="zoom:80%;"></li><li><p>数据库设计概念</p><ul><li>数据库设计就是根据业务系统的具体需求，结合我们所选用的DBMS，为这个业务系统构造出最优的数据存储模型。</li><li>建立数据库中的==表结构==以及==表与表之间的关联关系==的过程。</li><li>有哪些表？表里有哪些字段？表和表之间有什么关系？</li></ul></li><li><p>数据库设计的步骤</p><ul><li><p>需求分析（数据是什么? 数据具有哪些属性? 数据与属性的特点是什么）</p></li><li><p>逻辑分析（通过ER图对数据库进行逻辑建模，不需要考虑我们所选用的数据库管理系统）</p><p>如下图就是ER(Entity/Relation)图：</p><img src="/2021/12/21/mysql%E9%AB%98%E7%BA%A7/image-20210724131210759.png" alt="image-20210724131210759" style="zoom:80%;"></li><li><p>物理设计（根据数据库自身的特点把逻辑设计转换为物理设计）</p></li><li><p>维护设计（1.对新的需求进行建表；2.表优化）</p></li></ul></li><li><p>表关系</p><ul><li><p>一对一</p><ul><li>如：用户 和 用户详情</li><li>一对一关系多用于表拆分，将一个实体中经常使用的字段放一张表，不经常使用的字段放另一张表，用于提升查询性能</li></ul><img src="/2021/12/21/mysql%E9%AB%98%E7%BA%A7/image-20210724133015129.png" alt="image-20210724133015129" style="zoom:80%;"><p>上图左边是用户的详细信息，而我们真正在展示用户信息时最长用的则是上图右边红框所示，所以我们会将详细信息查分成两周那个表。</p></li><li><p>一对多</p><ul><li><p>如：部门 和 员工</p></li><li><p>一个部门对应多个员工，一个员工对应一个部门。如下图：</p><img src="/2021/12/21/mysql%E9%AB%98%E7%BA%A7/image-20210724133443094.png" alt="image-20210724133443094" style="zoom:90%;"></li></ul></li><li><p>多对多</p><ul><li><p>如：商品 和 订单</p></li><li><p>一个商品对应多个订单，一个订单包含多个商品。如下图：</p><img src="/2021/12/21/mysql%E9%AB%98%E7%BA%A7/image-20210724133704682.png" alt="image-20210724133704682" style="zoom:80%;"></li></ul></li></ul></li></ul><h3 id="2-2-表关系-一对多"><a href="#2-2-表关系-一对多" class="headerlink" title="2.2  表关系(一对多)"></a>2.2  表关系(一对多)</h3><ul><li><p>一对多</p><ul><li>如：部门 和 员工</li><li>一个部门对应多个员工，一个员工对应一个部门。</li></ul></li><li><p>实现方式</p><p>==在多的一方建立外键，指向一的一方的主键==</p></li><li><p>案例</p><p>我们还是以 <code>员工表</code> 和 <code>部门表</code> 举例:</p><img src="/2021/12/21/mysql%E9%AB%98%E7%BA%A7/image-20210724134145803.png" alt="image-20210724134145803" style="zoom:70%;"><p>经过分析发现，员工表属于多的一方，而部门表属于一的一方，此时我们会在员工表中添加一列（dep_id），指向于部门表的主键（id）：</p><img src="/2021/12/21/mysql%E9%AB%98%E7%BA%A7/image-20210724134318685.png" alt="image-20210724134318685" style="zoom:70%;"><p>建表语句如下：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 删除表</span></span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> IF <span class="keyword">EXISTS</span> tb_emp;</span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> IF <span class="keyword">EXISTS</span> tb_dept;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 部门表</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> tb_dept(</span><br><span class="line">id <span class="type">int</span> <span class="keyword">primary</span> key auto_increment,</span><br><span class="line">dep_name <span class="type">varchar</span>(<span class="number">20</span>),</span><br><span class="line">addr <span class="type">varchar</span>(<span class="number">20</span>)</span><br><span class="line">);</span><br><span class="line"><span class="comment">-- 员工表 </span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> tb_emp(</span><br><span class="line">id <span class="type">int</span> <span class="keyword">primary</span> key auto_increment,</span><br><span class="line">name <span class="type">varchar</span>(<span class="number">20</span>),</span><br><span class="line">age <span class="type">int</span>,</span><br><span class="line">dep_id <span class="type">int</span>,</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 添加外键 dep_id,关联 dept 表的id主键</span></span><br><span class="line"><span class="keyword">CONSTRAINT</span> fk_emp_dept <span class="keyword">FOREIGN</span> KEY(dep_id) <span class="keyword">REFERENCES</span> tb_dept(id)</span><br><span class="line">);</span><br></pre></td></tr></table></figure><p>查看表结构模型图：</p><img src="/2021/12/21/mysql%E9%AB%98%E7%BA%A7/image-20210724140456921.png" alt="image-20210724140456921" style="zoom:80%;"></li></ul><h3 id="2-3-表关系-多对多"><a href="#2-3-表关系-多对多" class="headerlink" title="2.3  表关系(多对多)"></a>2.3  表关系(多对多)</h3><ul><li><p>多对多</p><ul><li>如：商品 和 订单</li><li>一个商品对应多个订单，一个订单包含多个商品</li></ul></li><li><p>实现方式</p><p>==建立第三张中间表，中间表至少包含两个外键，分别关联两方主键==</p></li><li><p>案例</p><p>我们以 <code>订单表</code> 和 <code>商品表</code> 举例：</p><img src="/2021/12/21/mysql%E9%AB%98%E7%BA%A7/image-20210724134735939.png" alt="image-20210724134735939" style="zoom:70%;"><p>经过分析发现，订单表和商品表都属于多的一方，此时需要创建一个中间表，在中间表中添加订单表的外键和商品表的外键指向两张表的主键：</p><img src="/2021/12/21/mysql%E9%AB%98%E7%BA%A7/image-20210724135054834.png" alt="image-20210724135054834" style="zoom:70%;"><p>建表语句如下：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 删除表</span></span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> IF <span class="keyword">EXISTS</span> tb_order_goods;</span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> IF <span class="keyword">EXISTS</span> tb_order;</span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> IF <span class="keyword">EXISTS</span> tb_goods;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 订单表</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> tb_order(</span><br><span class="line">id <span class="type">int</span> <span class="keyword">primary</span> key auto_increment,</span><br><span class="line">payment <span class="keyword">double</span>(<span class="number">10</span>,<span class="number">2</span>),</span><br><span class="line">payment_type TINYINT,</span><br><span class="line">status TINYINT</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 商品表</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> tb_goods(</span><br><span class="line">id <span class="type">int</span> <span class="keyword">primary</span> key auto_increment,</span><br><span class="line">title <span class="type">varchar</span>(<span class="number">100</span>),</span><br><span class="line">price <span class="keyword">double</span>(<span class="number">10</span>,<span class="number">2</span>)</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 订单商品中间表</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> tb_order_goods(</span><br><span class="line">id <span class="type">int</span> <span class="keyword">primary</span> key auto_increment,</span><br><span class="line">order_id <span class="type">int</span>,</span><br><span class="line">goods_id <span class="type">int</span>,</span><br><span class="line">count <span class="type">int</span></span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 建完表后，添加外键</span></span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> tb_order_goods <span class="keyword">add</span> <span class="keyword">CONSTRAINT</span> fk_order_id <span class="keyword">FOREIGN</span> key(order_id) <span class="keyword">REFERENCES</span> tb_order(id);</span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> tb_order_goods <span class="keyword">add</span> <span class="keyword">CONSTRAINT</span> fk_goods_id <span class="keyword">FOREIGN</span> key(goods_id) <span class="keyword">REFERENCES</span> tb_goods(id);</span><br></pre></td></tr></table></figure><p>查看表结构模型图：</p><img src="/2021/12/21/mysql%E9%AB%98%E7%BA%A7/image-20210724140307910.png" alt="image-20210724140307910" style="zoom:80%;"></li></ul><h3 id="2-4-表关系-一对一"><a href="#2-4-表关系-一对一" class="headerlink" title="2.4  表关系(一对一)"></a>2.4  表关系(一对一)</h3><ul><li><p>一对一</p><ul><li>如：用户 和 用户详情</li><li>一对一关系多用于表拆分，将一个实体中经常使用的字段放一张表，不经常使用的字段放另一张表，用于提升查询性能</li></ul></li><li><p>实现方式</p><p>==在任意一方加入外键，关联另一方主键，并且设置外键为唯一(UNIQUE)==</p></li><li><p>案例</p><p>我们以 <code>用户表</code> 举例：</p><img src="/2021/12/21/mysql%E9%AB%98%E7%BA%A7/image-20210724135346913.png" alt="image-20210724135346913" style="zoom:70%;"><p>而在真正使用过程中发现 id、photo、nickname、age、gender 字段比较常用，此时就可以将这张表查分成两张表。</p></li></ul><p>​    <img src="/2021/12/21/mysql%E9%AB%98%E7%BA%A7/image-20210724135649341.png" alt="image-20210724135649341" style="zoom:70%;"></p><p>​    </p><p>​    建表语句如下：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> tb_user_desc (</span><br><span class="line">id <span class="type">int</span> <span class="keyword">primary</span> key auto_increment,</span><br><span class="line">city <span class="type">varchar</span>(<span class="number">20</span>),</span><br><span class="line">edu <span class="type">varchar</span>(<span class="number">10</span>),</span><br><span class="line">income <span class="type">int</span>,</span><br><span class="line">status <span class="type">char</span>(<span class="number">2</span>),</span><br><span class="line">des <span class="type">varchar</span>(<span class="number">100</span>)</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> tb_user (</span><br><span class="line">id <span class="type">int</span> <span class="keyword">primary</span> key auto_increment,</span><br><span class="line">photo <span class="type">varchar</span>(<span class="number">100</span>),</span><br><span class="line">nickname <span class="type">varchar</span>(<span class="number">50</span>),</span><br><span class="line">age <span class="type">int</span>,</span><br><span class="line">gender <span class="type">char</span>(<span class="number">1</span>),</span><br><span class="line">desc_id <span class="type">int</span> <span class="keyword">unique</span>,</span><br><span class="line"><span class="comment">-- 添加外键</span></span><br><span class="line"><span class="keyword">CONSTRAINT</span> fk_user_desc <span class="keyword">FOREIGN</span> KEY(desc_id) <span class="keyword">REFERENCES</span> tb_user_desc(id)</span><br><span class="line">);</span><br></pre></td></tr></table></figure><p>​    查看表结构模型图：</p><img src="/2021/12/21/mysql%E9%AB%98%E7%BA%A7/image-20210724141445785.png" alt="image-20210724141445785" style="zoom:80%;"><h3 id="2-5-数据库设计案例"><a href="#2-5-数据库设计案例" class="headerlink" title="2.5  数据库设计案例"></a>2.5  数据库设计案例</h3><p>根据下图设计表及表和表之间的关系：</p><img src="/2021/12/21/mysql%E9%AB%98%E7%BA%A7/image-20210724141822204.png" alt="image-20210724141822204" style="zoom:80%;"><p>经过分析，我们分为 <code>专辑表</code>  <code>曲目表</code>  <code>短评表</code>  <code>用户表</code>   4张表。</p><img src="/2021/12/21/mysql%E9%AB%98%E7%BA%A7/image-20210724141550446.png" alt="image-20210724141550446" style="zoom:80%;"><p>一个专辑可以有多个曲目，一个曲目只能属于某一张专辑，所以专辑表和曲目表的关系是==一对多==。</p><p>一个专辑可以被多个用户进行评论，一个用户可以对多个专辑进行评论，所以专辑表和用户表的关系是 ==多对多==。</p><p>一个用户可以发多个短评，一个短评只能是某一个人发的，所以用户表和短评表的关系是 ==一对多==。</p><img src="/2021/12/21/mysql%E9%AB%98%E7%BA%A7/image-20210724142550839.png" alt="image-20210724142550839" style="zoom:80%;"><h2 id="3，多表查询"><a href="#3，多表查询" class="headerlink" title="3，多表查询"></a>3，多表查询</h2><p>多表查询顾名思义就是从多张表中一次性的查询出我们想要的数据。我们通过具体的sql给他们演示，先准备环境</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> IF <span class="keyword">EXISTS</span> emp;</span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> IF <span class="keyword">EXISTS</span> dept;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># 创建部门表</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> dept(</span><br><span class="line">        did <span class="type">INT</span> <span class="keyword">PRIMARY</span> KEY AUTO_INCREMENT,</span><br><span class="line">        dname <span class="type">VARCHAR</span>(<span class="number">20</span>)</span><br><span class="line">    );</span><br><span class="line"></span><br><span class="line"># 创建员工表</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> emp (</span><br><span class="line">        id <span class="type">INT</span> <span class="keyword">PRIMARY</span> KEY AUTO_INCREMENT,</span><br><span class="line">        NAME <span class="type">VARCHAR</span>(<span class="number">10</span>),</span><br><span class="line">        gender <span class="type">CHAR</span>(<span class="number">1</span>), <span class="comment">-- 性别</span></span><br><span class="line">        salary <span class="keyword">DOUBLE</span>, <span class="comment">-- 工资</span></span><br><span class="line">        join_date <span class="type">DATE</span>, <span class="comment">-- 入职日期</span></span><br><span class="line">        dep_id <span class="type">INT</span>,</span><br><span class="line">        <span class="keyword">FOREIGN</span> KEY (dep_id) <span class="keyword">REFERENCES</span> dept(did) <span class="comment">-- 外键，关联部门表(部门表的主键)</span></span><br><span class="line">    );</span><br><span class="line"><span class="comment">-- 添加部门数据</span></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> dept (dNAME) <span class="keyword">VALUES</span> (<span class="string">&#x27;研发部&#x27;</span>),(<span class="string">&#x27;市场部&#x27;</span>),(<span class="string">&#x27;财务部&#x27;</span>),(<span class="string">&#x27;销售部&#x27;</span>);</span><br><span class="line"><span class="comment">-- 添加员工数据</span></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> emp(NAME,gender,salary,join_date,dep_id) <span class="keyword">VALUES</span></span><br><span class="line">(<span class="string">&#x27;孙悟空&#x27;</span>,<span class="string">&#x27;男&#x27;</span>,<span class="number">7200</span>,<span class="string">&#x27;2013-02-24&#x27;</span>,<span class="number">1</span>),</span><br><span class="line">(<span class="string">&#x27;猪八戒&#x27;</span>,<span class="string">&#x27;男&#x27;</span>,<span class="number">3600</span>,<span class="string">&#x27;2010-12-02&#x27;</span>,<span class="number">2</span>),</span><br><span class="line">(<span class="string">&#x27;唐僧&#x27;</span>,<span class="string">&#x27;男&#x27;</span>,<span class="number">9000</span>,<span class="string">&#x27;2008-08-08&#x27;</span>,<span class="number">2</span>),</span><br><span class="line">(<span class="string">&#x27;白骨精&#x27;</span>,<span class="string">&#x27;女&#x27;</span>,<span class="number">5000</span>,<span class="string">&#x27;2015-10-07&#x27;</span>,<span class="number">3</span>),</span><br><span class="line">(<span class="string">&#x27;蜘蛛精&#x27;</span>,<span class="string">&#x27;女&#x27;</span>,<span class="number">4500</span>,<span class="string">&#x27;2011-03-14&#x27;</span>,<span class="number">1</span>),</span><br><span class="line">(<span class="string">&#x27;小白龙&#x27;</span>,<span class="string">&#x27;男&#x27;</span>,<span class="number">2500</span>,<span class="string">&#x27;2011-02-14&#x27;</span>,<span class="keyword">null</span>);</span><br></pre></td></tr></table></figure><p>执行下面的多表查询语句</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp , dept;  <span class="comment">-- 从emp和dept表中查询所有的字段数据</span></span><br></pre></td></tr></table></figure><p>结果如下：</p><img src="/2021/12/21/mysql%E9%AB%98%E7%BA%A7/image-20210724173630506.png" alt="image-20210724173630506" style="zoom:90%;"><p>从上面的结果我们看到有一些无效的数据，如 <code>孙悟空</code> 这个员工属于1号部门，但也同时关联的2、3、4号部门。所以我们要通过限制员工表中的 <code>dep_id</code> 字段的值和部门表 <code>did</code> 字段的值相等来消除这些无效的数据，</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp , dept <span class="keyword">where</span> emp.dep_id <span class="operator">=</span> dept.did;</span><br></pre></td></tr></table></figure><p>执行后结果如下：</p><img src="/2021/12/21/mysql%E9%AB%98%E7%BA%A7/image-20210724174212443.png" alt="image-20210724174212443" style="zoom:90%;"><p>上面语句就是连接查询，那么多表查询都有哪些呢？</p><ul><li><p>连接查询</p><img src="/2021/12/21/mysql%E9%AB%98%E7%BA%A7/image-20210724174717647.png" alt="image-20210724174717647" style="zoom:80%;"> <ul><li>内连接查询 ：相当于查询AB交集数据</li><li>外连接查询<ul><li>左外连接查询 ：相当于查询A表所有数据和交集部门数据</li><li>右外连接查询 ： 相当于查询B表所有数据和交集部分数据</li></ul></li></ul></li><li><p>子查询</p></li></ul><h3 id="3-1-内连接查询"><a href="#3-1-内连接查询" class="headerlink" title="3.1  内连接查询"></a>3.1  内连接查询</h3><ul><li>语法</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 隐式内连接</span></span><br><span class="line"><span class="keyword">SELECT</span> 字段列表 <span class="keyword">FROM</span> 表<span class="number">1</span>,表<span class="number">2</span>… <span class="keyword">WHERE</span> 条件;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 显示内连接</span></span><br><span class="line"><span class="keyword">SELECT</span> 字段列表 <span class="keyword">FROM</span> 表<span class="number">1</span> [<span class="keyword">INNER</span>] <span class="keyword">JOIN</span> 表<span class="number">2</span> <span class="keyword">ON</span> 条件;</span><br></pre></td></tr></table></figure><blockquote><p>内连接相当于查询 A B 交集数据</p></blockquote><img src="/2021/12/21/mysql%E9%AB%98%E7%BA%A7/image-20210724174717647.png" alt="image-20210724174717647" style="zoom:80%;"><ul><li><p>案例</p><ul><li><p>隐式内连接</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span></span><br><span class="line"><span class="operator">*</span></span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">emp,</span><br><span class="line">dept</span><br><span class="line"><span class="keyword">WHERE</span></span><br><span class="line">emp.dep_id <span class="operator">=</span> dept.did;</span><br></pre></td></tr></table></figure><p>执行上述语句结果如下：</p><img src="/2021/12/21/mysql%E9%AB%98%E7%BA%A7/image-20210724175344508.png" alt="image-20210724175344508" style="zoom:80%;"></li><li><p>查询 emp的 name， gender，dept表的dname</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">emp. NAME,</span><br><span class="line">emp.gender,</span><br><span class="line">dept.dname</span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">emp,</span><br><span class="line">dept</span><br><span class="line"><span class="keyword">WHERE</span></span><br><span class="line">emp.dep_id <span class="operator">=</span> dept.did;</span><br></pre></td></tr></table></figure><p>执行语句结果如下：</p><img src="/2021/12/21/mysql%E9%AB%98%E7%BA%A7/image-20210724175518159.png" alt="image-20210724175518159" style="zoom:80%;"><p>上面语句中使用表名指定字段所属有点麻烦，sql也支持给表指别名，上述语句可以改进为</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">t1. NAME,</span><br><span class="line">t1.gender,</span><br><span class="line">t2.dname</span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">emp t1,</span><br><span class="line">dept t2</span><br><span class="line"><span class="keyword">WHERE</span></span><br><span class="line">t1.dep_id <span class="operator">=</span> t2.did;</span><br></pre></td></tr></table></figure></li><li><p>显式内连接</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp <span class="keyword">inner</span> <span class="keyword">join</span> dept <span class="keyword">on</span> emp.dep_id <span class="operator">=</span> dept.did;</span><br><span class="line"><span class="comment">-- 上面语句中的inner可以省略，可以书写为如下语句</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp  <span class="keyword">join</span> dept <span class="keyword">on</span> emp.dep_id <span class="operator">=</span> dept.did;</span><br></pre></td></tr></table></figure><p>执行结果如下：</p><img src="/2021/12/21/mysql%E9%AB%98%E7%BA%A7/image-20210724180103531.png" alt="image-20210724180103531" style="zoom:80%;"></li></ul></li></ul><h3 id="3-2-外连接查询"><a href="#3-2-外连接查询" class="headerlink" title="3.2  外连接查询"></a>3.2  外连接查询</h3><ul><li><p>语法</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 左外连接</span></span><br><span class="line"><span class="keyword">SELECT</span> 字段列表 <span class="keyword">FROM</span> 表<span class="number">1</span> <span class="keyword">LEFT</span> [<span class="keyword">OUTER</span>] <span class="keyword">JOIN</span> 表<span class="number">2</span> <span class="keyword">ON</span> 条件;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 右外连接</span></span><br><span class="line"><span class="keyword">SELECT</span> 字段列表 <span class="keyword">FROM</span> 表<span class="number">1</span> <span class="keyword">RIGHT</span> [<span class="keyword">OUTER</span>] <span class="keyword">JOIN</span> 表<span class="number">2</span> <span class="keyword">ON</span> 条件;</span><br></pre></td></tr></table></figure><blockquote><p>左外连接：相当于查询A表所有数据和交集部分数据</p><p>右外连接：相当于查询B表所有数据和交集部分数据</p></blockquote><img src="/2021/12/21/mysql%E9%AB%98%E7%BA%A7/image-20210724174717647.png" alt="image-20210724174717647" style="zoom:80%;"></li><li><p>案例</p><ul><li><p>查询emp表所有数据和对应的部门信息（左外连接）</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp <span class="keyword">left</span> <span class="keyword">join</span> dept <span class="keyword">on</span> emp.dep_id <span class="operator">=</span> dept.did;</span><br></pre></td></tr></table></figure><p>执行语句结果如下：</p><img src="/2021/12/21/mysql%E9%AB%98%E7%BA%A7/image-20210724180542757.png" alt="image-20210724180542757" style="zoom:80%;"><p>结果显示查询到了左表（emp）中所有的数据及两张表能关联的数据。</p></li><li><p>查询dept表所有数据和对应的员工信息（右外连接）</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp <span class="keyword">right</span> <span class="keyword">join</span> dept <span class="keyword">on</span> emp.dep_id <span class="operator">=</span> dept.did;</span><br></pre></td></tr></table></figure><p>执行语句结果如下：</p><img src="/2021/12/21/mysql%E9%AB%98%E7%BA%A7/image-20210724180613494.png" alt="image-20210724180613494" style="zoom:80%;"><p>结果显示查询到了右表（dept）中所有的数据及两张表能关联的数据。</p><p>要查询出部门表中所有的数据，也可以通过左外连接实现，只需要将两个表的位置进行互换：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> dept <span class="keyword">left</span> <span class="keyword">join</span> emp <span class="keyword">on</span> emp.dep_id <span class="operator">=</span> dept.did;</span><br></pre></td></tr></table></figure></li></ul></li></ul><h3 id="3-3-子查询"><a href="#3-3-子查询" class="headerlink" title="3.3  子查询"></a>3.3  子查询</h3><ul><li><p>概念</p><p>==查询中嵌套查询，称嵌套查询为子查询。==</p><p>什么是查询中嵌套查询呢？我们通过一个例子来看：</p><p><strong>需求：查询工资高于猪八戒的员工信息。</strong></p><p>来实现这个需求，我们就可以通过二步实现，第一步：先查询出来 猪八戒的工资</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> salary <span class="keyword">from</span> emp <span class="keyword">where</span> name <span class="operator">=</span> <span class="string">&#x27;猪八戒&#x27;</span></span><br></pre></td></tr></table></figure><p> 第二步：查询工资高于猪八戒的员工信息</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp <span class="keyword">where</span> salary <span class="operator">&gt;</span> <span class="number">3600</span>;</span><br></pre></td></tr></table></figure><p>第二步中的3600可以通过第一步的sql查询出来，所以将3600用第一步的sql语句进行替换</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp <span class="keyword">where</span> salary <span class="operator">&gt;</span> (<span class="keyword">select</span> salary <span class="keyword">from</span> emp <span class="keyword">where</span> name <span class="operator">=</span> <span class="string">&#x27;猪八戒&#x27;</span>);</span><br></pre></td></tr></table></figure><p>这就是查询语句中嵌套查询语句。</p></li><li><p>子查询根据查询结果不同，作用不同</p><ul><li>子查询语句结果是单行单列，子查询语句作为条件值，使用 =  !=  &gt;  &lt;  等进行条件判断</li><li>子查询语句结果是多行单列，子查询语句作为条件值，使用 in 等关键字进行条件判断</li><li>子查询语句结果是多行多列，子查询语句作为虚拟表</li></ul></li><li><p>案例</p><ul><li><p>查询 ‘财务部’ 和 ‘市场部’ 所有的员工信息</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 查询 &#x27;财务部&#x27; 或者 &#x27;市场部&#x27; 所有的员工的部门did</span></span><br><span class="line"><span class="keyword">select</span> did <span class="keyword">from</span> dept <span class="keyword">where</span> dname <span class="operator">=</span> <span class="string">&#x27;财务部&#x27;</span> <span class="keyword">or</span> dname <span class="operator">=</span> <span class="string">&#x27;市场部&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp <span class="keyword">where</span> dep_id <span class="keyword">in</span> (<span class="keyword">select</span> did <span class="keyword">from</span> dept <span class="keyword">where</span> dname <span class="operator">=</span> <span class="string">&#x27;财务部&#x27;</span> <span class="keyword">or</span> dname <span class="operator">=</span> <span class="string">&#x27;市场部&#x27;</span>);</span><br></pre></td></tr></table></figure></li><li><p>查询入职日期是 ‘2011-11-11’ 之后的员工信息和部门信息</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 查询入职日期是 &#x27;2011-11-11&#x27; 之后的员工信息</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp <span class="keyword">where</span> join_date <span class="operator">&gt;</span> <span class="string">&#x27;2011-11-11&#x27;</span> ;</span><br><span class="line"><span class="comment">-- 将上面语句的结果作为虚拟表和dept表进行内连接查询</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> (<span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp <span class="keyword">where</span> join_date <span class="operator">&gt;</span> <span class="string">&#x27;2011-11-11&#x27;</span> ) t1, dept <span class="keyword">where</span> t1.dep_id <span class="operator">=</span> dept.did;</span><br></pre></td></tr></table></figure></li></ul></li></ul><h3 id="3-4-案例"><a href="#3-4-案例" class="headerlink" title="3.4  案例"></a>3.4  案例</h3><ul><li>环境准备：</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> IF <span class="keyword">EXISTS</span> emp;</span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> IF <span class="keyword">EXISTS</span> dept;</span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> IF <span class="keyword">EXISTS</span> job;</span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> IF <span class="keyword">EXISTS</span> salarygrade;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 部门表</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> dept (</span><br><span class="line">  did <span class="type">INT</span> <span class="keyword">PRIMARY</span> KEY <span class="keyword">PRIMARY</span> KEY, <span class="comment">-- 部门id</span></span><br><span class="line">  dname <span class="type">VARCHAR</span>(<span class="number">50</span>), <span class="comment">-- 部门名称</span></span><br><span class="line">  loc <span class="type">VARCHAR</span>(<span class="number">50</span>) <span class="comment">-- 部门所在地</span></span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 职务表，职务名称，职务描述</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> job (</span><br><span class="line">  id <span class="type">INT</span> <span class="keyword">PRIMARY</span> KEY,</span><br><span class="line">  jname <span class="type">VARCHAR</span>(<span class="number">20</span>),</span><br><span class="line">  description <span class="type">VARCHAR</span>(<span class="number">50</span>)</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 员工表</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> emp (</span><br><span class="line">  id <span class="type">INT</span> <span class="keyword">PRIMARY</span> KEY, <span class="comment">-- 员工id</span></span><br><span class="line">  ename <span class="type">VARCHAR</span>(<span class="number">50</span>), <span class="comment">-- 员工姓名</span></span><br><span class="line">  job_id <span class="type">INT</span>, <span class="comment">-- 职务id</span></span><br><span class="line">  mgr <span class="type">INT</span> , <span class="comment">-- 上级领导</span></span><br><span class="line">  joindate <span class="type">DATE</span>, <span class="comment">-- 入职日期</span></span><br><span class="line">  salary <span class="type">DECIMAL</span>(<span class="number">7</span>,<span class="number">2</span>), <span class="comment">-- 工资</span></span><br><span class="line">  bonus <span class="type">DECIMAL</span>(<span class="number">7</span>,<span class="number">2</span>), <span class="comment">-- 奖金</span></span><br><span class="line">  dept_id <span class="type">INT</span>, <span class="comment">-- 所在部门编号</span></span><br><span class="line">  <span class="keyword">CONSTRAINT</span> emp_jobid_ref_job_id_fk <span class="keyword">FOREIGN</span> KEY (job_id) <span class="keyword">REFERENCES</span> job (id),</span><br><span class="line">  <span class="keyword">CONSTRAINT</span> emp_deptid_ref_dept_id_fk <span class="keyword">FOREIGN</span> KEY (dept_id) <span class="keyword">REFERENCES</span> dept (id)</span><br><span class="line">);</span><br><span class="line"><span class="comment">-- 工资等级表</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> salarygrade (</span><br><span class="line">  grade <span class="type">INT</span> <span class="keyword">PRIMARY</span> KEY,   <span class="comment">-- 级别</span></span><br><span class="line">  losalary <span class="type">INT</span>,  <span class="comment">-- 最低工资</span></span><br><span class="line">  hisalary <span class="type">INT</span> <span class="comment">-- 最高工资</span></span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 添加4个部门</span></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> dept(did,dname,loc) <span class="keyword">VALUES</span> </span><br><span class="line">(<span class="number">10</span>,<span class="string">&#x27;教研部&#x27;</span>,<span class="string">&#x27;北京&#x27;</span>),</span><br><span class="line">(<span class="number">20</span>,<span class="string">&#x27;学工部&#x27;</span>,<span class="string">&#x27;上海&#x27;</span>),</span><br><span class="line">(<span class="number">30</span>,<span class="string">&#x27;销售部&#x27;</span>,<span class="string">&#x27;广州&#x27;</span>),</span><br><span class="line">(<span class="number">40</span>,<span class="string">&#x27;财务部&#x27;</span>,<span class="string">&#x27;深圳&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 添加4个职务</span></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> job (id, jname, description) <span class="keyword">VALUES</span></span><br><span class="line">(<span class="number">1</span>, <span class="string">&#x27;董事长&#x27;</span>, <span class="string">&#x27;管理整个公司，接单&#x27;</span>),</span><br><span class="line">(<span class="number">2</span>, <span class="string">&#x27;经理&#x27;</span>, <span class="string">&#x27;管理部门员工&#x27;</span>),</span><br><span class="line">(<span class="number">3</span>, <span class="string">&#x27;销售员&#x27;</span>, <span class="string">&#x27;向客人推销产品&#x27;</span>),</span><br><span class="line">(<span class="number">4</span>, <span class="string">&#x27;文员&#x27;</span>, <span class="string">&#x27;使用办公软件&#x27;</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 添加员工</span></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> emp(id,ename,job_id,mgr,joindate,salary,bonus,dept_id) <span class="keyword">VALUES</span> </span><br><span class="line">(<span class="number">1001</span>,<span class="string">&#x27;孙悟空&#x27;</span>,<span class="number">4</span>,<span class="number">1004</span>,<span class="string">&#x27;2000-12-17&#x27;</span>,<span class="string">&#x27;8000.00&#x27;</span>,<span class="keyword">NULL</span>,<span class="number">20</span>),</span><br><span class="line">(<span class="number">1002</span>,<span class="string">&#x27;卢俊义&#x27;</span>,<span class="number">3</span>,<span class="number">1006</span>,<span class="string">&#x27;2001-02-20&#x27;</span>,<span class="string">&#x27;16000.00&#x27;</span>,<span class="string">&#x27;3000.00&#x27;</span>,<span class="number">30</span>),</span><br><span class="line">(<span class="number">1003</span>,<span class="string">&#x27;林冲&#x27;</span>,<span class="number">3</span>,<span class="number">1006</span>,<span class="string">&#x27;2001-02-22&#x27;</span>,<span class="string">&#x27;12500.00&#x27;</span>,<span class="string">&#x27;5000.00&#x27;</span>,<span class="number">30</span>),</span><br><span class="line">(<span class="number">1004</span>,<span class="string">&#x27;唐僧&#x27;</span>,<span class="number">2</span>,<span class="number">1009</span>,<span class="string">&#x27;2001-04-02&#x27;</span>,<span class="string">&#x27;29750.00&#x27;</span>,<span class="keyword">NULL</span>,<span class="number">20</span>),</span><br><span class="line">(<span class="number">1005</span>,<span class="string">&#x27;李逵&#x27;</span>,<span class="number">4</span>,<span class="number">1006</span>,<span class="string">&#x27;2001-09-28&#x27;</span>,<span class="string">&#x27;12500.00&#x27;</span>,<span class="string">&#x27;14000.00&#x27;</span>,<span class="number">30</span>),</span><br><span class="line">(<span class="number">1006</span>,<span class="string">&#x27;宋江&#x27;</span>,<span class="number">2</span>,<span class="number">1009</span>,<span class="string">&#x27;2001-05-01&#x27;</span>,<span class="string">&#x27;28500.00&#x27;</span>,<span class="keyword">NULL</span>,<span class="number">30</span>),</span><br><span class="line">(<span class="number">1007</span>,<span class="string">&#x27;刘备&#x27;</span>,<span class="number">2</span>,<span class="number">1009</span>,<span class="string">&#x27;2001-09-01&#x27;</span>,<span class="string">&#x27;24500.00&#x27;</span>,<span class="keyword">NULL</span>,<span class="number">10</span>),</span><br><span class="line">(<span class="number">1008</span>,<span class="string">&#x27;猪八戒&#x27;</span>,<span class="number">4</span>,<span class="number">1004</span>,<span class="string">&#x27;2007-04-19&#x27;</span>,<span class="string">&#x27;30000.00&#x27;</span>,<span class="keyword">NULL</span>,<span class="number">20</span>),</span><br><span class="line">(<span class="number">1009</span>,<span class="string">&#x27;罗贯中&#x27;</span>,<span class="number">1</span>,<span class="keyword">NULL</span>,<span class="string">&#x27;2001-11-17&#x27;</span>,<span class="string">&#x27;50000.00&#x27;</span>,<span class="keyword">NULL</span>,<span class="number">10</span>),</span><br><span class="line">(<span class="number">1010</span>,<span class="string">&#x27;吴用&#x27;</span>,<span class="number">3</span>,<span class="number">1006</span>,<span class="string">&#x27;2001-09-08&#x27;</span>,<span class="string">&#x27;15000.00&#x27;</span>,<span class="string">&#x27;0.00&#x27;</span>,<span class="number">30</span>),</span><br><span class="line">(<span class="number">1011</span>,<span class="string">&#x27;沙僧&#x27;</span>,<span class="number">4</span>,<span class="number">1004</span>,<span class="string">&#x27;2007-05-23&#x27;</span>,<span class="string">&#x27;11000.00&#x27;</span>,<span class="keyword">NULL</span>,<span class="number">20</span>),</span><br><span class="line">(<span class="number">1012</span>,<span class="string">&#x27;李逵&#x27;</span>,<span class="number">4</span>,<span class="number">1006</span>,<span class="string">&#x27;2001-12-03&#x27;</span>,<span class="string">&#x27;9500.00&#x27;</span>,<span class="keyword">NULL</span>,<span class="number">30</span>),</span><br><span class="line">(<span class="number">1013</span>,<span class="string">&#x27;小白龙&#x27;</span>,<span class="number">4</span>,<span class="number">1004</span>,<span class="string">&#x27;2001-12-03&#x27;</span>,<span class="string">&#x27;30000.00&#x27;</span>,<span class="keyword">NULL</span>,<span class="number">20</span>),</span><br><span class="line">(<span class="number">1014</span>,<span class="string">&#x27;关羽&#x27;</span>,<span class="number">4</span>,<span class="number">1007</span>,<span class="string">&#x27;2002-01-23&#x27;</span>,<span class="string">&#x27;13000.00&#x27;</span>,<span class="keyword">NULL</span>,<span class="number">10</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 添加5个工资等级</span></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> salarygrade(grade,losalary,hisalary) <span class="keyword">VALUES</span> </span><br><span class="line">(<span class="number">1</span>,<span class="number">7000</span>,<span class="number">12000</span>),</span><br><span class="line">(<span class="number">2</span>,<span class="number">12010</span>,<span class="number">14000</span>),</span><br><span class="line">(<span class="number">3</span>,<span class="number">14010</span>,<span class="number">20000</span>),</span><br><span class="line">(<span class="number">4</span>,<span class="number">20010</span>,<span class="number">30000</span>),</span><br><span class="line">(<span class="number">5</span>,<span class="number">30010</span>,<span class="number">99990</span>);</span><br></pre></td></tr></table></figure><ul><li><p>需求</p><ol><li><p>查询所有员工信息。查询员工编号，员工姓名，工资，职务名称，职务描述</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">分析：</span></span><br><span class="line"><span class="comment">1. 员工编号，员工姓名，工资 信息在emp 员工表中</span></span><br><span class="line"><span class="comment">2. 职务名称，职务描述 信息在 job 职务表中</span></span><br><span class="line"><span class="comment">3. job 职务表 和 emp 员工表 是 一对多的关系 emp.job_id = job.id</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="comment">-- 方式一 ：隐式内连接</span></span><br><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">emp.id,</span><br><span class="line">emp.ename,</span><br><span class="line">emp.salary,</span><br><span class="line">job.jname,</span><br><span class="line">job.description</span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">emp,</span><br><span class="line">job</span><br><span class="line"><span class="keyword">WHERE</span></span><br><span class="line">emp.job_id <span class="operator">=</span> job.id;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 方式二 ：显式内连接</span></span><br><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">emp.id,</span><br><span class="line">emp.ename,</span><br><span class="line">emp.salary,</span><br><span class="line">job.jname,</span><br><span class="line">job.description</span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">emp</span><br><span class="line"><span class="keyword">INNER</span> <span class="keyword">JOIN</span> job <span class="keyword">ON</span> emp.job_id <span class="operator">=</span> job.id;</span><br></pre></td></tr></table></figure></li><li><p>查询员工编号，员工姓名，工资，职务名称，职务描述，部门名称，部门位置</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">分析：</span></span><br><span class="line"><span class="comment">1. 员工编号，员工姓名，工资 信息在emp 员工表中</span></span><br><span class="line"><span class="comment">2. 职务名称，职务描述 信息在 job 职务表中</span></span><br><span class="line"><span class="comment">3. job 职务表 和 emp 员工表 是 一对多的关系 emp.job_id = job.id</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">4. 部门名称，部门位置 来自于 部门表 dept</span></span><br><span class="line"><span class="comment">5. dept 和 emp 一对多关系 dept.id = emp.dept_id</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 方式一 ：隐式内连接</span></span><br><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">emp.id,</span><br><span class="line">emp.ename,</span><br><span class="line">emp.salary,</span><br><span class="line">job.jname,</span><br><span class="line">job.description,</span><br><span class="line">dept.dname,</span><br><span class="line">dept.loc</span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">emp,</span><br><span class="line">job,</span><br><span class="line">dept</span><br><span class="line"><span class="keyword">WHERE</span></span><br><span class="line">emp.job_id <span class="operator">=</span> job.id</span><br><span class="line"><span class="keyword">and</span> dept.id <span class="operator">=</span> emp.dept_id</span><br><span class="line">;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 方式二 ：显式内连接</span></span><br><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">emp.id,</span><br><span class="line">emp.ename,</span><br><span class="line">emp.salary,</span><br><span class="line">job.jname,</span><br><span class="line">job.description,</span><br><span class="line">dept.dname,</span><br><span class="line">dept.loc</span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">emp</span><br><span class="line"><span class="keyword">INNER</span> <span class="keyword">JOIN</span> job <span class="keyword">ON</span> emp.job_id <span class="operator">=</span> job.id</span><br><span class="line"><span class="keyword">INNER</span> <span class="keyword">JOIN</span> dept <span class="keyword">ON</span> dept.id <span class="operator">=</span> emp.dept_id</span><br></pre></td></tr></table></figure></li><li><p>查询员工姓名，工资，工资等级</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">分析：</span></span><br><span class="line"><span class="comment">1. 员工姓名，工资 信息在emp 员工表中</span></span><br><span class="line"><span class="comment">2. 工资等级 信息在 salarygrade 工资等级表中</span></span><br><span class="line"><span class="comment">3. emp.salary &gt;= salarygrade.losalary  and emp.salary &lt;= salarygrade.hisalary</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">emp.ename,</span><br><span class="line">emp.salary,</span><br><span class="line">t2.<span class="operator">*</span></span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">emp,</span><br><span class="line">salarygrade t2</span><br><span class="line"><span class="keyword">WHERE</span></span><br><span class="line">emp.salary <span class="operator">&gt;=</span> t2.losalary</span><br><span class="line"><span class="keyword">AND</span> emp.salary <span class="operator">&lt;=</span> t2.hisalary</span><br></pre></td></tr></table></figure></li><li><p>查询员工姓名，工资，职务名称，职务描述，部门名称，部门位置，工资等级</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">分析：</span></span><br><span class="line"><span class="comment">1. 员工编号，员工姓名，工资 信息在emp 员工表中</span></span><br><span class="line"><span class="comment">2. 职务名称，职务描述 信息在 job 职务表中</span></span><br><span class="line"><span class="comment">3. job 职务表 和 emp 员工表 是 一对多的关系 emp.job_id = job.id</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">4. 部门名称，部门位置 来自于 部门表 dept</span></span><br><span class="line"><span class="comment">5. dept 和 emp 一对多关系 dept.id = emp.dept_id</span></span><br><span class="line"><span class="comment">6. 工资等级 信息在 salarygrade 工资等级表中</span></span><br><span class="line"><span class="comment">7. emp.salary &gt;= salarygrade.losalary  and emp.salary &lt;= salarygrade.hisalary</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">emp.id,</span><br><span class="line">emp.ename,</span><br><span class="line">emp.salary,</span><br><span class="line">job.jname,</span><br><span class="line">job.description,</span><br><span class="line">dept.dname,</span><br><span class="line">dept.loc,</span><br><span class="line">t2.grade</span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">emp</span><br><span class="line"><span class="keyword">INNER</span> <span class="keyword">JOIN</span> job <span class="keyword">ON</span> emp.job_id <span class="operator">=</span> job.id</span><br><span class="line"><span class="keyword">INNER</span> <span class="keyword">JOIN</span> dept <span class="keyword">ON</span> dept.id <span class="operator">=</span> emp.dept_id</span><br><span class="line"><span class="keyword">INNER</span> <span class="keyword">JOIN</span> salarygrade t2 <span class="keyword">ON</span> emp.salary <span class="keyword">BETWEEN</span> t2.losalary <span class="keyword">and</span> t2.hisalary;</span><br></pre></td></tr></table></figure></li><li><p>查询出部门编号、部门名称、部门位置、部门人数</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">分析：</span></span><br><span class="line"><span class="comment">1. 部门编号、部门名称、部门位置 来自于部门 dept 表</span></span><br><span class="line"><span class="comment">2. 部门人数: 在emp表中 按照dept_id 进行分组，然后count(*)统计数量</span></span><br><span class="line"><span class="comment">3. 使用子查询，让部门表和分组后的表进行内连接</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="comment">-- 根据部门id分组查询每一个部门id和员工数</span></span><br><span class="line"><span class="keyword">select</span> dept_id, <span class="built_in">count</span>(<span class="operator">*</span>) <span class="keyword">from</span> emp <span class="keyword">group</span> <span class="keyword">by</span> dept_id;</span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">dept.id,</span><br><span class="line">dept.dname,</span><br><span class="line">dept.loc,</span><br><span class="line">t1.count</span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">dept,</span><br><span class="line">(</span><br><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">dept_id,</span><br><span class="line"><span class="built_in">count</span>(<span class="operator">*</span>) count</span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">emp</span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span></span><br><span class="line">dept_id</span><br><span class="line">) t1</span><br><span class="line"><span class="keyword">WHERE</span></span><br><span class="line">dept.id <span class="operator">=</span> t1.dept_id</span><br></pre></td></tr></table></figure></li></ol></li></ul><h2 id="4，事务"><a href="#4，事务" class="headerlink" title="4，事务"></a>4，事务</h2><h3 id="4-1-概述"><a href="#4-1-概述" class="headerlink" title="4.1  概述"></a>4.1  概述</h3><blockquote><p>数据库的事务（Transaction）是一种机制、一个操作序列，包含了==一组数据库操作命令==。</p><p>事务把所有的命令作为一个整体一起向系统提交或撤销操作请求，即这一组数据库命令==要么同时成功，要么同时失败==。</p><p>事务是一个不可分割的工作逻辑单元。</p></blockquote><p>这些概念不好理解，接下来举例说明，如下图有一张表</p><img src="/2021/12/21/mysql%E9%AB%98%E7%BA%A7/image-20210724224955876.png" alt="image-20210724224955876" style="zoom:80%;"><p>张三和李四账户中各有100块钱，现李四需要转换500块钱给张三，具体的转账操作为</p><ul><li>第一步：查询李四账户余额</li><li>第二步：从李四账户金额 -500</li><li>第三步：给张三账户金额 +500</li></ul><p>现在假设在转账过程中第二步完成后出现了异常第三步没有执行，就会造成李四账户金额少了500，而张三金额并没有多500；这样的系统是有问题的。如果解决呢？使用事务可以解决上述问题</p><img src="/2021/12/21/mysql%E9%AB%98%E7%BA%A7/image-20210724225537533.png" alt="image-20210724225537533" style="zoom:70%;"><p>从上图可以看到在转账前开启事务，如果出现了异常回滚事务，三步正常执行就提交事务，这样就可以完美解决问题。</p><h3 id="4-2-语法"><a href="#4-2-语法" class="headerlink" title="4.2  语法"></a>4.2  语法</h3><ul><li><p>开启事务</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">START</span> TRANSACTION;</span><br><span class="line">或者  </span><br><span class="line"><span class="keyword">BEGIN</span>;</span><br></pre></td></tr></table></figure></li><li><p>提交事务</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">commit</span>;</span><br></pre></td></tr></table></figure></li><li><p>回滚事务</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">rollback</span>;</span><br></pre></td></tr></table></figure></li></ul><h3 id="4-3-代码验证"><a href="#4-3-代码验证" class="headerlink" title="4.3  代码验证"></a>4.3  代码验证</h3><ul><li><p>环境准备</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> IF <span class="keyword">EXISTS</span> account;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 创建账户表</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> account(</span><br><span class="line">id <span class="type">int</span> <span class="keyword">PRIMARY</span> KEY auto_increment,</span><br><span class="line">name <span class="type">varchar</span>(<span class="number">10</span>),</span><br><span class="line">money <span class="keyword">double</span>(<span class="number">10</span>,<span class="number">2</span>)</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 添加数据</span></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> account(name,money) <span class="keyword">values</span>(<span class="string">&#x27;张三&#x27;</span>,<span class="number">1000</span>),(<span class="string">&#x27;李四&#x27;</span>,<span class="number">1000</span>);</span><br></pre></td></tr></table></figure></li><li><p>不加事务演示问题</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 转账操作</span></span><br><span class="line"><span class="comment">-- 1. 查询李四账户金额是否大于500</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 2. 李四账户 -500</span></span><br><span class="line">UPDATE account <span class="keyword">set</span> money <span class="operator">=</span> money <span class="operator">-</span> <span class="number">500</span> <span class="keyword">where</span> name <span class="operator">=</span> <span class="string">&#x27;李四&#x27;</span>;</span><br><span class="line"></span><br><span class="line">出现异常了...  <span class="comment">-- 此处不是注释，在整体执行时会出问题，后面的sql则不执行</span></span><br><span class="line"><span class="comment">-- 3. 张三账户 +500</span></span><br><span class="line">UPDATE account <span class="keyword">set</span> money <span class="operator">=</span> money <span class="operator">+</span> <span class="number">500</span> <span class="keyword">where</span> name <span class="operator">=</span> <span class="string">&#x27;张三&#x27;</span>;</span><br></pre></td></tr></table></figure><p>整体执行结果肯定会出问题，我们查询账户表中数据，发现李四账户少了500。</p><img src="/2021/12/21/mysql%E9%AB%98%E7%BA%A7/image-20210724230250263.png" alt="image-20210724230250263" style="zoom:90%;"></li><li><p>添加事务sql如下：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 开启事务</span></span><br><span class="line"><span class="keyword">BEGIN</span>;</span><br><span class="line"><span class="comment">-- 转账操作</span></span><br><span class="line"><span class="comment">-- 1. 查询李四账户金额是否大于500</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 2. 李四账户 -500</span></span><br><span class="line">UPDATE account <span class="keyword">set</span> money <span class="operator">=</span> money <span class="operator">-</span> <span class="number">500</span> <span class="keyword">where</span> name <span class="operator">=</span> <span class="string">&#x27;李四&#x27;</span>;</span><br><span class="line"></span><br><span class="line">出现异常了...  <span class="comment">-- 此处不是注释，在整体执行时会出问题，后面的sql则不执行</span></span><br><span class="line"><span class="comment">-- 3. 张三账户 +500</span></span><br><span class="line">UPDATE account <span class="keyword">set</span> money <span class="operator">=</span> money <span class="operator">+</span> <span class="number">500</span> <span class="keyword">where</span> name <span class="operator">=</span> <span class="string">&#x27;张三&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 提交事务</span></span><br><span class="line"><span class="keyword">COMMIT</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 回滚事务</span></span><br><span class="line"><span class="keyword">ROLLBACK</span>;</span><br></pre></td></tr></table></figure><p>上面sql中的执行成功进选择执行提交事务，而出现问题则执行回滚事务的语句。以后我们肯定不可能这样操作，而是在java中进行操作，在java中可以抓取异常，没出现异常提交事务，出现异常回滚事务。</p></li></ul><h3 id="4-4-事务的四大特征"><a href="#4-4-事务的四大特征" class="headerlink" title="4.4  事务的四大特征"></a>4.4  事务的四大特征</h3><ul><li><p>原子性（Atomicity）: 事务是不可分割的最小操作单位，要么同时成功，要么同时失败</p></li><li><p>一致性（Consistency） :事务完成时，必须使所有的数据都保持一致状态</p></li><li><p>隔离性（Isolation） :多个事务之间，操作的可见性</p></li><li><p>持久性（Durability） :事务一旦提交或回滚，它对数据库中的数据的改变就是永久的</p></li></ul><blockquote><p>==说明：==</p><p>mysql中事务是自动提交的。</p><p>也就是说我们不添加事务执行sql语句，语句执行完毕会自动的提交事务。</p><p>可以通过下面语句查询默认提交方式：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SELECT @<span class="meta">@autocommit</span>;</span><br></pre></td></tr></table></figure><p>查询到的结果是1 则表示自动提交，结果是0表示手动提交。当然也可以通过下面语句修改提交方式</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">set</span> @<span class="variable">@autocommit</span> <span class="operator">=</span> <span class="number">0</span>;</span><br></pre></td></tr></table></figure></blockquote>]]></content:encoded>
      
      
      <category domain="http://shicheng.cool/categories/Mysql%E7%9A%84%E9%AB%98%E7%BA%A7%E4%BD%BF%E7%94%A8/">-Mysql的高级使用</category>
      
      
      
      <comments>http://shicheng.cool/2021/12/21/mysql%E9%AB%98%E7%BA%A7/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>Maven&amp;MyBatis</title>
      <link>http://shicheng.cool/2021/12/19/Maven&amp;MyBatis/</link>
      <guid>http://shicheng.cool/2021/12/19/Maven&amp;MyBatis/</guid>
      <pubDate>Sat, 18 Dec 2021 16:00:00 GMT</pubDate>
      
        
        
      <description>&lt;h2 id=&quot;Maven-amp-MyBatis&quot;&gt;&lt;a href=&quot;#Maven-amp-MyBatis&quot; class=&quot;headerlink&quot; title=&quot;Maven&amp;amp;MyBatis&quot;&gt;&lt;/a&gt;Maven&amp;amp;MyBatis&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;目标</description>
        
      
      
      
      <content:encoded><![CDATA[<h2 id="Maven-amp-MyBatis"><a href="#Maven-amp-MyBatis" class="headerlink" title="Maven&amp;MyBatis"></a>Maven&amp;MyBatis</h2><p><strong>目标</strong></p><blockquote><ul><li>能够使用Maven进行项目的管理</li><li>能够完成Mybatis代理方式查询数据</li><li>能够理解Mybatis核心配置文件的配置</li></ul></blockquote><h2 id="1，Maven"><a href="#1，Maven" class="headerlink" title="1，Maven"></a>1，Maven</h2><p>Maven是专门用于管理和构建Java项目的工具，它的主要功能有：</p><ul><li><p>提供了一套标准化的项目结构</p></li><li><p>提供了一套标准化的构建流程（编译，测试，打包，发布……）</p></li><li><p>提供了一套依赖管理机制</p></li></ul><p><strong>标准化的项目结构：</strong></p><p>项目结构我们都知道，每一个开发工具（IDE）都有自己不同的项目结构，它们互相之间不通用。我再eclipse中创建的目录，无法在idea中进行使用，这就造成了很大的不方便，如下图:前两个是以后开发经常使用的开发工具</p><img src="/2021/12/19/Maven&MyBatis/image-20210726153521381.png" alt="image-20210726153521381" style="zoom:80%;"><p>而Maven提供了一套标准化的项目结构，所有的IDE使用Maven构建的项目完全一样，所以IDE创建的Maven项目可以通用。如下图右边就是Maven构建的项目结构。</p><img src="/2021/12/19/Maven&MyBatis/image-20210726153815028.png" alt="image-20210726153815028" style="zoom:80%;"><p><strong>标准化的构建流程：</strong></p><img src="/2021/12/19/Maven&MyBatis/image-20210726154144488.png" alt="image-20210726154144488" style="zoom:80%;"><p>如上图所示我们开发了一套系统，代码需要进行编译、测试、打包、发布，这些操作如果需要反复进行就显得特别麻烦，而Maven提供了一套简单的命令来完成项目构建。</p><p><strong>依赖管理：</strong></p><p>依赖管理其实就是管理你项目所依赖的第三方资源（jar包、插件）。如之前我们项目中需要使用JDBC和Druid的话，就需要去网上下载对应的依赖包（当前之前是老师已经下载好提供给大家了），复制到项目中，还要将jar包加入工作环境这一系列的操作。如下图所示</p><img src="/2021/12/19/Maven&MyBatis/image-20210726154753631.png" alt="image-20210726154753631" style="zoom:80%;"><p>而Maven使用标准的 ==坐标== 配置来管理各种依赖，只需要简单的配置就可以完成依赖管理。</p><img src="/2021/12/19/Maven&MyBatis/image-20210726154922337.png" alt="image-20210726154922337" style="zoom:80%;"><p>如上图右边所示就是mysql驱动包的坐标，在项目中只需要写这段配置，其他都不需要我们担心，Maven都帮我们进行操作了。</p><p>市面上有很多构建工具，而Maven依旧还是主流构建工具，如下图是常用构建工具的使用占比</p><p><img src="/2021/12/19/Maven&MyBatis/image-20210726155212733.png" alt="image-20210726155212733"></p><h3 id="1-1-Maven简介"><a href="#1-1-Maven简介" class="headerlink" title="1.1  Maven简介"></a>1.1  Maven简介</h3><blockquote><p>==Apache Maven== 是一个项目管理和构建==工具==，它基于项目对象模型(POM)的概念，通过一小段描述信息来管理项目的构建、报告和文档。</p><p>官网 ：<a href="http://maven.apache.org/">http://maven.apache.org/</a> </p></blockquote><p>通过上面的描述大家只需要知道Maven是一个工具即可。Apache 是一个开源组织，将来我们会学习很多Apache提供的项目。</p><h4 id="1-1-1-Maven模型"><a href="#1-1-1-Maven模型" class="headerlink" title="1.1.1  Maven模型"></a>1.1.1  Maven模型</h4><ul><li>项目对象模型 (Project Object Model)</li><li>依赖管理模型(Dependency)</li><li>插件(Plugin)</li></ul><img src="/2021/12/19/Maven&MyBatis/image-20210726155759621.png" alt="image-20210726155759621" style="zoom:80%;"><p>如上图所示就是Maven的模型，而我们先看紫色框框起来的部分，他就是用来完成 <code>标准化构建流程</code> 。如我们需要编译，Maven提供了一个编译插件供我们使用，我们需要打包，Maven就提供了一个打包插件提供我们使用等。</p><img src="/2021/12/19/Maven&MyBatis/image-20210726160928515.png" alt="image-20210726160928515" style="zoom:80%;"><p>上图中紫色框起来的部分，项目对象模型就是将我们自己抽象成一个对象模型，有自己专属的坐标，如下图所示是一个Maven项目：</p><img src="/2021/12/19/Maven&MyBatis/image-20210726161340796.png" alt="image-20210726161340796" style="zoom:80%;"><p>依赖管理模型则是使用坐标来描述当前项目依赖哪儿些第三方jar包，如下图所示</p><p><img src="/2021/12/19/Maven&MyBatis/image-20210726161616034.png" alt="image-20210726161616034"></p><p>上述Maven模型图中还有一部分是仓库。如何理解仓库呢？</p><h4 id="1-1-2-仓库"><a href="#1-1-2-仓库" class="headerlink" title="1.1.2  仓库"></a>1.1.2  仓库</h4><p>大家想想这样的场景，我们创建Maven项目，在项目中使用坐标来指定项目的依赖，那么依赖的jar包到底存储在什么地方呢？其实依赖jar包是存储在我们的本地仓库中。而项目运行时从本地仓库中拿需要的依赖jar包。</p><p><strong>仓库分类：</strong></p><ul><li><p>本地仓库：自己计算机上的一个目录</p></li><li><p>中央仓库：由Maven团队维护的全球唯一的仓库</p><ul><li>地址： <a href="https://repo1.maven.org/maven2/">https://repo1.maven.org/maven2/</a></li></ul></li><li><p>远程仓库(私服)：一般由公司团队搭建的私有仓库</p><p>今天我们只学习远程仓库的使用，并不会搭建。</p></li></ul><p>当项目中使用坐标引入对应依赖jar包后，首先会查找本地仓库中是否有对应的jar包：</p><ul><li><p>如果有，则在项目直接引用;</p></li><li><p>如果没有，则去中央仓库中下载对应的jar包到本地仓库。</p></li></ul><img src="/2021/12/19/Maven&MyBatis/image-20210726162605394.png" alt="image-20210726162605394" style="zoom:70%;"><p>如果还可以搭建远程仓库，将来jar包的查找顺序则变为：</p><blockquote><p>本地仓库 –&gt; 远程仓库–&gt; 中央仓库</p></blockquote><img src="/2021/12/19/Maven&MyBatis/image-20210726162815045.png" alt="image-20210726162815045" style="zoom:70%;"><h3 id="1-2-Maven安装配置"><a href="#1-2-Maven安装配置" class="headerlink" title="1.2  Maven安装配置"></a>1.2  Maven安装配置</h3><ul><li><p>解压 apache-maven-3.6.1.rar 既安装完成</p><img src="/2021/12/19/Maven&MyBatis/image-20210726163219682.png" alt="image-20210726163219682" style="zoom:90%;"><blockquote><p>建议解压缩到没有中文、特殊字符的路径下。如课程中解压缩到 <code>D:\software</code> 下。</p></blockquote><p>解压缩后的目录结构如下：</p><img src="/2021/12/19/Maven&MyBatis/image-20210726163518885.png" alt="image-20210726163518885" style="zoom:80%;"><ul><li>bin目录 ： 存放的是可执行命令。mvn 命令重点关注。</li><li>conf目录 ：存放Maven的配置文件。<code>settings.xml</code> 配置文件后期需要修改。</li><li>lib目录 ：存放Maven依赖的jar包。Maven也是使用java开发的，所以它也依赖其他的jar包。</li></ul></li><li><p>配置环境变量 MAVEN_HOME 为安装路径的bin目录</p><p><code>此电脑</code> 右键  –&gt;  <code>高级系统设置</code>  –&gt;  <code>高级</code>  –&gt;  <code>环境变量</code></p><p>在系统变量处新建一个变量 <code>MAVEN_HOME</code></p><img src="/2021/12/19/Maven&MyBatis/image-20210726164058589.png" alt="image-20210726164058589" style="zoom:80%;"><p>在 <code>Path</code> 中进行配置</p><img src="/2021/12/19/Maven&MyBatis/image-20210726164146832.png" alt="image-20210726164146832" style="zoom:80%;"><p>打开命令提示符进行验证，出现如图所示表示安装成功</p><img src="/2021/12/19/Maven&MyBatis/image-20210726164306480.png" alt="image-20210726164306480" style="zoom:80%;"></li><li><p>配置本地仓库</p><p>修改 conf/settings.xml 中的 <localRepository> 为一个指定目录作为本地仓库，用来存储jar包。</localRepository></p><img src="/2021/12/19/Maven&MyBatis/image-20210726164348048.png" alt="image-20210726164348048" style="zoom:60%;"></li><li><p>配置阿里云私服</p><p>中央仓库在国外，所以下载jar包速度可能比较慢，而阿里公司提供了一个远程仓库，里面基本也都有开源项目的jar包。</p><p>修改 conf/settings.xml 中的 <mirrors>标签，为其添加如下子标签：</mirrors></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">mirror</span>&gt;</span>  </span><br><span class="line">    <span class="tag">&lt;<span class="name">id</span>&gt;</span>alimaven<span class="tag">&lt;/<span class="name">id</span>&gt;</span>  </span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>aliyun maven<span class="tag">&lt;/<span class="name">name</span>&gt;</span>  </span><br><span class="line">    <span class="tag">&lt;<span class="name">url</span>&gt;</span>http://maven.aliyun.com/nexus/content/groups/public/<span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mirrorOf</span>&gt;</span>central<span class="tag">&lt;/<span class="name">mirrorOf</span>&gt;</span>          </span><br><span class="line"><span class="tag">&lt;/<span class="name">mirror</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><h3 id="1-3-Maven基本使用"><a href="#1-3-Maven基本使用" class="headerlink" title="1.3  Maven基本使用"></a>1.3  Maven基本使用</h3><h4 id="1-3-1-Maven-常用命令"><a href="#1-3-1-Maven-常用命令" class="headerlink" title="1.3.1  Maven 常用命令"></a>1.3.1  Maven 常用命令</h4><blockquote><ul><li><p>compile ：编译</p></li><li><p>clean：清理</p></li><li><p>test：测试</p></li><li><p>package：打包</p></li><li><p>install：安装</p></li></ul></blockquote><p><strong>命令演示：</strong></p><p>在 <code>资料\代码\maven-project</code> 提供了一个使用Maven构建的项目，项目结构如下：</p><img src="/2021/12/19/Maven&MyBatis/image-20210726170404545.png" alt="image-20210726170404545" style="zoom:70%;"><p>而我们使用上面命令需要在磁盘上进入到项目的 <code>pom.xml</code> 目录下，打开命令提示符</p><img src="/2021/12/19/Maven&MyBatis/image-20210726170549907.png" alt="image-20210726170549907" style="zoom:70%;"><p><strong>编译命令演示：</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">compile ：编译</span><br></pre></td></tr></table></figure><p>执行上述命令可以看到：</p><ul><li>从阿里云下载编译需要的插件的jar包，在本地仓库也能看到下载好的插件</li><li>在项目下会生成一个 <code>target</code> 目录</li></ul><img src="/2021/12/19/Maven&MyBatis/image-20210726171047324.png" alt="image-20210726171047324" style="zoom:80%;"><p>同时在项目下会出现一个 <code>target</code> 目录，编译后的字节码文件就放在该目录下</p><img src="/2021/12/19/Maven&MyBatis/image-20210726171346824.png" alt="image-20210726171346824" style="zoom:80%;"><p><strong>清理命令演示：</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mvn clean</span><br></pre></td></tr></table></figure><p>执行上述命令可以看到</p><ul><li>从阿里云下载清理需要的插件jar包</li><li>删除项目下的 <code>target</code> 目录</li></ul><img src="/2021/12/19/Maven&MyBatis/image-20210726171558786.png" alt="image-20210726171558786" style="zoom:80%;"><p><strong>打包命令演示：</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mvn package</span><br></pre></td></tr></table></figure><p>执行上述命令可以看到：</p><ul><li>从阿里云下载打包需要的插件jar包</li><li>在项目的 <code>terget</code> 目录下有一个jar包（将当前项目打成的jar包）</li></ul><img src="/2021/12/19/Maven&MyBatis/image-20210726171747125.png" alt="image-20210726171747125" style="zoom:80%;"><p><strong>测试命令演示：</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mvn test  </span><br></pre></td></tr></table></figure><p>该命令会执行所有的测试代码。执行上述命令效果如下</p><img src="/2021/12/19/Maven&MyBatis/image-20210726172343933.png" alt="image-20210726172343933" style="zoom:80%;"><p><strong>安装命令演示：</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mvn install</span><br></pre></td></tr></table></figure><p>该命令会将当前项目打成jar包，并安装到本地仓库。执行完上述命令后到本地仓库查看结果如下：</p><img src="/2021/12/19/Maven&MyBatis/image-20210726172709112.png" alt="image-20210726172709112" style="zoom:80%;"><h4 id="1-3-2-Maven-生命周期"><a href="#1-3-2-Maven-生命周期" class="headerlink" title="1.3.2  Maven 生命周期"></a>1.3.2  Maven 生命周期</h4><p>Maven 构建项目生命周期描述的是一次构建过程经历经历了多少个事件</p><p>Maven 对项目构建的生命周期划分为3套：</p><ul><li>clean ：清理工作。</li><li>default ：核心工作，例如编译，测试，打包，安装等。</li><li>site ： 产生报告，发布站点等。这套声明周期一般不会使用。</li></ul><p>同一套生命周期内，执行后边的命令，前面的所有命令会自动执行。例如默认（default）生命周期如下：</p><img src="/2021/12/19/Maven&MyBatis/image-20210726173153576.png" alt="image-20210726173153576" style="zoom:80%;"><p>当我们执行 <code>install</code>（安装）命令时，它会先执行 <code>compile</code>命令，再执行 <code>test </code> 命令，再执行 <code>package</code> 命令，最后执行 <code>install</code> 命令。</p><p>当我们执行 <code>package</code> （打包）命令时，它会先执行 <code>compile</code> 命令，再执行 <code>test</code> 命令，最后执行 <code>package</code> 命令。</p><p>默认的生命周期也有对应的很多命令，其他的一般都不会使用，我们只关注常用的：</p><img src="/2021/12/19/Maven&MyBatis/image-20210726173619353.png" alt="image-20210726173619353" style="zoom:80%;"><h3 id="1-4-IDEA使用Maven"><a href="#1-4-IDEA使用Maven" class="headerlink" title="1.4  IDEA使用Maven"></a>1.4  IDEA使用Maven</h3><p>以后开发中我们肯定会在高级开发工具中使用Maven管理项目，而我们常用的高级开发工具是IDEA，所以接下来我们会讲解Maven在IDEA中的使用。</p><h4 id="1-4-1-IDEA配置Maven环境"><a href="#1-4-1-IDEA配置Maven环境" class="headerlink" title="1.4.1  IDEA配置Maven环境"></a>1.4.1  IDEA配置Maven环境</h4><p>我们需要先在IDEA中配置Maven环境：</p><ul><li><p>选择 IDEA中 File –&gt; Settings</p><img src="/2021/12/19/Maven&MyBatis/image-20210726174202898.png" alt="image-20210726174202898" style="zoom:80%;"></li><li><p>搜索 maven </p><img src="/2021/12/19/Maven&MyBatis/image-20210726174229396.png" alt="image-20210726174229396" style="zoom:80%;"></li><li><p>设置 IDEA 使用本地安装的 Maven，并修改配置文件路径</p><img src="/2021/12/19/Maven&MyBatis/image-20210726174248050.png" alt="image-20210726174248050" style="zoom:70%;"></li></ul><h4 id="1-4-2-Maven-坐标详解"><a href="#1-4-2-Maven-坐标详解" class="headerlink" title="1.4.2  Maven 坐标详解"></a>1.4.2  Maven 坐标详解</h4><p><strong>什么是坐标？</strong></p><ul><li>Maven 中的坐标是==资源的唯一标识==</li><li>使用坐标来定义项目或引入项目中需要的依赖</li></ul><p><strong>Maven 坐标主要组成</strong></p><ul><li>groupId：定义当前Maven项目隶属组织名称（通常是域名反写，例如：com.itheima）</li><li>artifactId：定义当前Maven项目名称（通常是模块名称，例如 order-service、goods-service）</li><li>version：定义当前项目版本号</li></ul><p>如下图就是使用坐标表示一个项目：</p><p><img src="/2021/12/19/Maven&MyBatis/image-20210726174718176.png" alt="image-20210726174718176"></p><blockquote><p>==注意：==</p><ul><li>上面所说的资源可以是插件、依赖、当前项目。</li><li>我们的项目如果被其他的项目依赖时，也是需要坐标来引入的。</li></ul></blockquote><h4 id="1-4-3-IDEA-创建-Maven项目"><a href="#1-4-3-IDEA-创建-Maven项目" class="headerlink" title="1.4.3  IDEA 创建 Maven项目"></a>1.4.3  IDEA 创建 Maven项目</h4><ul><li><p>创建模块，选择Maven，点击Next</p><img src="/2021/12/19/Maven&MyBatis/image-20210726175049876.png" alt="image-20210726175049876" style="zoom:90%;"></li><li><p>填写模块名称，坐标信息，点击finish，创建完成</p><img src="/2021/12/19/Maven&MyBatis/image-20210726175109822.png" alt="image-20210726175109822" style="zoom:80%;"><p>创建好的项目目录结构如下：</p><p><img src="/2021/12/19/Maven&MyBatis/image-20210726175244826.png" alt="image-20210726175244826"></p></li><li><p>编写 HelloWorld，并运行</p></li></ul><h4 id="1-4-4-IDEA-导入-Maven项目"><a href="#1-4-4-IDEA-导入-Maven项目" class="headerlink" title="1.4.4  IDEA 导入 Maven项目"></a>1.4.4  IDEA 导入 Maven项目</h4><p>大家在学习时可能需要看老师的代码，当然也就需要将老师的代码导入到自己的IDEA中。我们可以通过以下步骤进行项目的导入：</p><ul><li><p>选择右侧Maven面板，点击 + 号</p><img src="/2021/12/19/Maven&MyBatis/image-20210726182702336.png" alt="image-20210726182702336" style="zoom:70%;"></li><li><p>选中对应项目的pom.xml文件，双击即可</p><img src="/2021/12/19/Maven&MyBatis/image-20210726182648891.png" alt="image-20210726182648891" style="zoom:70%;"></li><li><p>如果没有Maven面板，选择</p><p>View –&gt; Appearance –&gt; Tool Window Bars</p><img src="/2021/12/19/Maven&MyBatis/image-20210726182634466.png" alt="image-20210726182634466" style="zoom:80%;"></li></ul><p>可以通过下图所示进行命令的操作：</p><img src="/2021/12/19/Maven&MyBatis/image-20210726182902961.png" alt="image-20210726182902961" style="zoom:80%;"><p><strong>配置 Maven-Helper 插件</strong> </p><ul><li><p>选择 IDEA中 File –&gt; Settings</p><img src="/2021/12/19/Maven&MyBatis/image-20210726192212026.png" alt="image-20210726192212026" style="zoom:80%;"></li><li><p>选择 Plugins</p><img src="/2021/12/19/Maven&MyBatis/image-20210726192224914.png" alt="image-20210726192224914" style="zoom:80%;"></li><li><p>搜索 Maven，选择第一个 Maven Helper，点击Install安装，弹出面板中点击Accept</p><img src="/2021/12/19/Maven&MyBatis/image-20210726192244567.png" alt="image-20210726192244567" style="zoom:80%;"></li><li><p>重启 IDEA</p></li></ul><p>安装完该插件后可以通过 选中项目右键进行相关命令操作，如下图所示：</p><img src="/2021/12/19/Maven&MyBatis/image-20210726192430371.png" alt="image-20210726192430371" style="zoom:80%;"><h3 id="1-5-依赖管理"><a href="#1-5-依赖管理" class="headerlink" title="1.5  依赖管理"></a>1.5  依赖管理</h3><h4 id="1-5-1-使用坐标引入jar包"><a href="#1-5-1-使用坐标引入jar包" class="headerlink" title="1.5.1  使用坐标引入jar包"></a>1.5.1  使用坐标引入jar包</h4><p><strong>使用坐标引入jar包的步骤：</strong></p><ul><li><p>在项目的 pom.xml 中编写 <dependencies> 标签</dependencies></p></li><li><p>在 <dependencies> 标签中 使用 <dependency> 引入坐标</dependency></dependencies></p></li><li><p>定义坐标的 groupId，artifactId，version</p><img src="/2021/12/19/Maven&MyBatis/image-20210726193105765.png" alt="image-20210726193105765" style="zoom:70%;"></li><li><p>点击刷新按钮，使坐标生效</p><img src="/2021/12/19/Maven&MyBatis/image-20210726193121384.png" alt="image-20210726193121384" style="zoom:60%;"></li></ul><blockquote><p> 注意：</p><ul><li>具体的坐标我们可以到如下网站进行搜索</li><li><a href="https://mvnrepository.com/">https://mvnrepository.com/</a></li></ul></blockquote><p><strong>快捷方式导入jar包的坐标：</strong></p><p>每次需要引入jar包，都去对应的网站进行搜索是比较麻烦的，接下来给大家介绍一种快捷引入坐标的方式</p><ul><li><p>在 pom.xml 中 按 alt + insert，选择 Dependency</p><img src="/2021/12/19/Maven&MyBatis/image-20210726193603724.png" alt="image-20210726193603724" style="zoom:60%;"></li><li><p>在弹出的面板中搜索对应坐标，然后双击选中对应坐标</p><img src="/2021/12/19/Maven&MyBatis/image-20210726193625229.png" alt="image-20210726193625229" style="zoom:60%;"></li><li><p>点击刷新按钮，使坐标生效</p><img src="/2021/12/19/Maven&MyBatis/image-20210726193121384.png" alt="image-20210726193121384" style="zoom:60%;"></li></ul><p><strong>自动导入设置：</strong></p><p>上面每次操作都需要点击刷新按钮，让引入的坐标生效。当然我们也可以通过设置让其自动完成</p><ul><li><p>选择 IDEA中 File –&gt; Settings</p><img src="/2021/12/19/Maven&MyBatis/image-20210726193854438.png" alt="image-20210726193854438" style="zoom:60%;"></li><li><p>在弹出的面板中找到 Build Tools</p><img src="/2021/12/19/Maven&MyBatis/image-20210726193909276.png" alt="image-20210726193909276" style="zoom:80%;"></li><li><p>选择 Any changes，点击 ok 即可生效</p></li></ul><h4 id="1-5-2-依赖范围"><a href="#1-5-2-依赖范围" class="headerlink" title="1.5.2  依赖范围"></a>1.5.2  依赖范围</h4><p>通过设置坐标的依赖范围(scope)，可以设置 对应jar包的作用范围：编译环境、测试环境、运行环境。</p><p>如下图所示给 <code>junit</code> 依赖通过 <code>scope</code> 标签指定依赖的作用范围。 那么这个依赖就只能作用在测试环境，其他环境下不能使用。</p><img src="/2021/12/19/Maven&MyBatis/image-20210726194703845.png" alt="image-20210726194703845" style="zoom:70%;"><p>那么 <code>scope</code> 都可以有哪些取值呢？</p><table><thead><tr><th><strong>依赖范围</strong></th><th>编译classpath</th><th>测试classpath</th><th>运行classpath</th><th>例子</th></tr></thead><tbody><tr><td><strong>compile</strong></td><td>Y</td><td>Y</td><td>Y</td><td>logback</td></tr><tr><td><strong>test</strong></td><td>-</td><td>Y</td><td>-</td><td>Junit</td></tr><tr><td><strong>provided</strong></td><td>Y</td><td>Y</td><td>-</td><td>servlet-api</td></tr><tr><td><strong>runtime</strong></td><td>-</td><td>Y</td><td>Y</td><td>jdbc驱动</td></tr><tr><td><strong>system</strong></td><td>Y</td><td>Y</td><td>-</td><td>存储在本地的jar包</td></tr></tbody></table><ul><li>compile ：作用于编译环境、测试环境、运行环境。</li><li>test ： 作用于测试环境。典型的就是Junit坐标，以后使用Junit时，都会将scope指定为该值</li><li>provided ：作用于编译环境、测试环境。我们后面会学习 <code>servlet-api</code> ，在使用它时，必须将 <code>scope</code> 设置为该值，不然运行时就会报错</li><li>runtime  ： 作用于测试环境、运行环境。jdbc驱动一般将 <code>scope</code> 设置为该值，当然不设置也没有任何问题 </li></ul><blockquote><p>注意：</p><ul><li>如果引入坐标不指定 <code>scope</code> 标签时，默认就是 compile  值。以后大部分jar包都是使用默认值。</li></ul></blockquote><h2 id="2，Mybatis"><a href="#2，Mybatis" class="headerlink" title="2，Mybatis"></a>2，Mybatis</h2><h3 id="2-1-Mybatis概述"><a href="#2-1-Mybatis概述" class="headerlink" title="2.1  Mybatis概述"></a>2.1  Mybatis概述</h3><h4 id="2-1-1-Mybatis概念"><a href="#2-1-1-Mybatis概念" class="headerlink" title="2.1.1  Mybatis概念"></a>2.1.1  Mybatis概念</h4><blockquote><ul><li><p>MyBatis 是一款优秀的==持久层框架==，用于简化 JDBC 开发</p></li><li><p>MyBatis 本是 Apache 的一个开源项目iBatis, 2010年这个项目由apache software foundation 迁移到了google code，并且改名为MyBatis 。2013年11月迁移到Github</p></li><li><p>官网：<a href="https://mybatis.org/mybatis-3/zh/index.html">https://mybatis.org/mybatis-3/zh/index.html</a> </p></li></ul></blockquote><p><strong>持久层：</strong></p><ul><li><p>负责将数据到保存到数据库的那一层代码。</p><p>以后开发我们会将操作数据库的Java代码作为持久层。而Mybatis就是对jdbc代码进行了封装。</p></li><li><p>JavaEE三层架构：表现层、业务层、持久层</p><p>三层架构在后期会给大家进行讲解，今天先简单的了解下即可。</p></li></ul><p><strong>框架：</strong></p><ul><li>框架就是一个半成品软件，是一套可重用的、通用的、软件基础代码模型</li><li>在框架的基础之上构建软件编写更加高效、规范、通用、可扩展</li></ul><p>举例给大家简单的解释一下什么是半成品软件。大家小时候应该在公园见过给石膏娃娃涂鸦</p><img src="/2021/12/19/Maven&MyBatis/image-20210726202410311.png" alt="image-20210726202410311" style="zoom:70%;"><p>如下图所示有一个石膏娃娃，这个就是一个半成品。你可以在这个半成品的基础上进行不同颜色的涂鸦</p><img src="/2021/12/19/Maven&MyBatis/image-20210726202858441.png" alt="image-20210726202858441" style="zoom:70%;"><p>了解了什么是Mybatis后，接下来说说以前 <code>JDBC代码</code> 的缺点以及Mybatis又是如何解决的。</p><h4 id="2-1-2-JDBC-缺点"><a href="#2-1-2-JDBC-缺点" class="headerlink" title="2.1.2  JDBC 缺点"></a>2.1.2  JDBC 缺点</h4><p>下面是 JDBC 代码，我们通过该代码分析都存在什么缺点：</p><img src="/2021/12/19/Maven&MyBatis/image-20210726203656847.png" alt="image-20210726203656847" style="zoom:70%;"><ul><li><p>硬编码</p><ul><li><p>注册驱动、获取连接</p><p>上图标1的代码有很多字符串，而这些是连接数据库的四个基本信息，以后如果要将Mysql数据库换成其他的关系型数据库的话，这四个地方都需要修改，如果放在此处就意味着要修改我们的源代码。</p></li><li><p>SQL语句</p><p>上图标2的代码。如果表结构发生变化，SQL语句就要进行更改。这也不方便后期的维护。</p></li></ul></li><li><p>操作繁琐</p><ul><li><p>手动设置参数</p></li><li><p>手动封装结果集</p><p>上图标4的代码是对查询到的数据进行封装，而这部分代码是没有什么技术含量，而且特别耗费时间的。</p></li></ul></li></ul><h4 id="2-1-3-Mybatis-优化"><a href="#2-1-3-Mybatis-优化" class="headerlink" title="2.1.3  Mybatis 优化"></a>2.1.3  Mybatis 优化</h4><ul><li>硬编码可以配置到==配置文件==</li><li>操作繁琐的地方mybatis都==自动完成==</li></ul><p>如图所示</p><img src="/2021/12/19/Maven&MyBatis/image-20210726204849309.png" alt="image-20210726204849309" style="zoom:80%;"><p>下图是持久层框架的使用占比。</p><img src="/2021/12/19/Maven&MyBatis/image-20210726205328999.png" alt="image-20210726205328999" style="zoom:80%;"><h3 id="2-2-Mybatis快速入门"><a href="#2-2-Mybatis快速入门" class="headerlink" title="2.2  Mybatis快速入门"></a>2.2  Mybatis快速入门</h3><p><strong>需求：查询user表中所有的数据</strong></p><ul><li><p>创建user表，添加数据</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> database mybatis;</span><br><span class="line">use mybatis;</span><br><span class="line"></span><br><span class="line"><span class="keyword">drop</span> <span class="keyword">table</span> if <span class="keyword">exists</span> tb_user;</span><br><span class="line"></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> tb_user(</span><br><span class="line">id <span class="type">int</span> <span class="keyword">primary</span> key auto_increment,</span><br><span class="line">username <span class="type">varchar</span>(<span class="number">20</span>),</span><br><span class="line">password <span class="type">varchar</span>(<span class="number">20</span>),</span><br><span class="line">gender <span class="type">char</span>(<span class="number">1</span>),</span><br><span class="line">addr <span class="type">varchar</span>(<span class="number">30</span>)</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> tb_user <span class="keyword">VALUES</span> (<span class="number">1</span>, <span class="string">&#x27;zhangsan&#x27;</span>, <span class="string">&#x27;123&#x27;</span>, <span class="string">&#x27;男&#x27;</span>, <span class="string">&#x27;北京&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> tb_user <span class="keyword">VALUES</span> (<span class="number">2</span>, <span class="string">&#x27;李四&#x27;</span>, <span class="string">&#x27;234&#x27;</span>, <span class="string">&#x27;女&#x27;</span>, <span class="string">&#x27;天津&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> tb_user <span class="keyword">VALUES</span> (<span class="number">3</span>, <span class="string">&#x27;王五&#x27;</span>, <span class="string">&#x27;11&#x27;</span>, <span class="string">&#x27;男&#x27;</span>, <span class="string">&#x27;西安&#x27;</span>);</span><br></pre></td></tr></table></figure></li><li><p>创建模块，导入坐标</p><p>在创建好的模块中的 pom.xml 配置文件中添加依赖的坐标</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--mybatis 依赖--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.mybatis<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.5.5<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--mysql 驱动--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>mysql<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mysql-connector-java<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>5.1.46<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--junit 单元测试--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.13<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 添加slf4j日志api --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.slf4j<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>slf4j-api<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.7.20<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 添加logback-classic依赖 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>ch.qos.logback<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>logback-classic<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.2.3<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 添加logback-core依赖 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>ch.qos.logback<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>logback-core<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.2.3<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br></pre></td></tr></table></figure><p>注意：需要在项目的 resources 目录下创建logback的配置文件</p></li><li><p>编写 MyBatis 核心配置文件 – &gt; 替换连接信息 解决硬编码问题</p><p>在模块下的 resources 目录下创建mybatis的配置文件 <code>mybatis-config.xml</code>，内容如下：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; ?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">configuration</span></span></span><br><span class="line"><span class="meta">        <span class="meta-keyword">PUBLIC</span> <span class="meta-string">&quot;-//mybatis.org//DTD Config 3.0//EN&quot;</span></span></span><br><span class="line"><span class="meta">        <span class="meta-string">&quot;http://mybatis.org/dtd/mybatis-3-config.dtd&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">typeAliases</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">package</span> <span class="attr">name</span>=<span class="string">&quot;com.itheima.pojo&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">typeAliases</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">    environments：配置数据库连接环境信息。可以配置多个environment，通过default属性切换不同的environment</span></span><br><span class="line"><span class="comment">    --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">environments</span> <span class="attr">default</span>=<span class="string">&quot;development&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">environment</span> <span class="attr">id</span>=<span class="string">&quot;development&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">transactionManager</span> <span class="attr">type</span>=<span class="string">&quot;JDBC&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dataSource</span> <span class="attr">type</span>=<span class="string">&quot;POOLED&quot;</span>&gt;</span></span><br><span class="line">                <span class="comment">&lt;!--数据库连接信息--&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;driver&quot;</span> <span class="attr">value</span>=<span class="string">&quot;com.mysql.jdbc.Driver&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;url&quot;</span> <span class="attr">value</span>=<span class="string">&quot;jdbc:mysql:///mybatis?useSSL=false&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;username&quot;</span> <span class="attr">value</span>=<span class="string">&quot;root&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;password&quot;</span> <span class="attr">value</span>=<span class="string">&quot;1234&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dataSource</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">environment</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">environment</span> <span class="attr">id</span>=<span class="string">&quot;test&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">transactionManager</span> <span class="attr">type</span>=<span class="string">&quot;JDBC&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dataSource</span> <span class="attr">type</span>=<span class="string">&quot;POOLED&quot;</span>&gt;</span></span><br><span class="line">                <span class="comment">&lt;!--数据库连接信息--&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;driver&quot;</span> <span class="attr">value</span>=<span class="string">&quot;com.mysql.jdbc.Driver&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;url&quot;</span> <span class="attr">value</span>=<span class="string">&quot;jdbc:mysql:///mybatis?useSSL=false&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;username&quot;</span> <span class="attr">value</span>=<span class="string">&quot;root&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;password&quot;</span> <span class="attr">value</span>=<span class="string">&quot;1234&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dataSource</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">environment</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">environments</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mappers</span>&gt;</span></span><br><span class="line">       <span class="comment">&lt;!--加载sql映射文件--&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">mapper</span> <span class="attr">resource</span>=<span class="string">&quot;UserMapper.xml&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">mappers</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>编写 SQL 映射文件 –&gt; 统一管理sql语句，解决硬编码问题</p><p>在模块的 <code>resources</code> 目录下创建映射配置文件 <code>UserMapper.xml</code>，内容如下：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; ?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">mapper</span> <span class="meta-keyword">PUBLIC</span> <span class="meta-string">&quot;-//mybatis.org//DTD Mapper 3.0//EN&quot;</span> <span class="meta-string">&quot;http://mybatis.org/dtd/mybatis-3-mapper.dtd&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">namespace</span>=<span class="string">&quot;test&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;selectAll&quot;</span> <span class="attr">resultType</span>=<span class="string">&quot;com.itheima.pojo.User&quot;</span>&gt;</span></span><br><span class="line">        select * from tb_user;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mapper</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>编码</p><ul><li><p>在 <code>com.itheima.pojo</code> 包下创建 User类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">User</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> id;</span><br><span class="line">    <span class="keyword">private</span> String username;</span><br><span class="line">    <span class="keyword">private</span> String password;</span><br><span class="line">    <span class="keyword">private</span> String gender;</span><br><span class="line">    <span class="keyword">private</span> String addr;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//省略了 setter 和 getter</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>在 <code>com.itheima</code> 包下编写 MybatisDemo 测试类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyBatisDemo</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">        <span class="comment">//1. 加载mybatis的核心配置文件，获取 SqlSessionFactory</span></span><br><span class="line">        String resource = <span class="string">&quot;mybatis-config.xml&quot;</span>;</span><br><span class="line">        InputStream inputStream = Resources.getResourceAsStream(resource);</span><br><span class="line">        SqlSessionFactory sqlSessionFactory = <span class="keyword">new</span> SqlSessionFactoryBuilder().build(inputStream);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//2. 获取SqlSession对象，用它来执行sql</span></span><br><span class="line">        SqlSession sqlSession = sqlSessionFactory.openSession();</span><br><span class="line">        <span class="comment">//3. 执行sql</span></span><br><span class="line">        List&lt;User&gt; users = sqlSession.selectList(<span class="string">&quot;test.selectAll&quot;</span>); <span class="comment">//参数是一个字符串，该字符串必须是映射配置文件的namespace.id</span></span><br><span class="line">        System.out.println(users);</span><br><span class="line">        <span class="comment">//4. 释放资源</span></span><br><span class="line">        sqlSession.close();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul></li></ul><p><strong>解决SQL映射文件的警告提示：</strong></p><p>在入门案例映射配置文件中存在报红的情况。问题如下：</p><img src="/2021/12/19/Maven&MyBatis/image-20210726212621722.png" alt="image-20210726212621722" style="zoom:80%;"><ul><li>产生的原因：Idea和数据库没有建立连接，不识别表信息。但是大家一定要记住，它并不影响程序的执行。</li><li>解决方式：在Idea中配置MySQL数据库连接。</li></ul><p>IDEA中配置MySQL数据库连接</p><ul><li><p>点击IDEA右边框的 <code>Database</code> ，在展开的界面点击 <code>+</code> 选择 <code>Data Source</code> ，再选择 <code>MySQL</code></p><img src="/2021/12/19/Maven&MyBatis/image-20210726213046072.png" alt="image-20210726213046072" style="zoom:80%;"></li><li><p>在弹出的界面进行基本信息的填写</p><img src="/2021/12/19/Maven&MyBatis/image-20210726213305893.png" alt="image-20210726213305893" style="zoom:80%;"></li><li><p>点击完成后就能看到如下界面</p><img src="/2021/12/19/Maven&MyBatis/image-20210726213541418.png" alt="image-20210726213541418" style="zoom:80%;"><p>而此界面就和 <code>navicat</code> 工具一样可以进行数据库的操作。也可以编写SQL语句</p></li></ul><img src="/2021/12/19/Maven&MyBatis/image-20210726213857620.png" alt="image-20210726213857620" style="zoom:80%;"><h3 id="2-3-Mapper代理开发"><a href="#2-3-Mapper代理开发" class="headerlink" title="2.3  Mapper代理开发"></a>2.3  Mapper代理开发</h3><h4 id="2-3-1-Mapper代理开发概述"><a href="#2-3-1-Mapper代理开发概述" class="headerlink" title="2.3.1  Mapper代理开发概述"></a>2.3.1  Mapper代理开发概述</h4><p>之前我们写的代码是基本使用方式，它也存在硬编码的问题，如下：</p><img src="/2021/12/19/Maven&MyBatis/image-20210726214648112.png" alt="image-20210726214648112" style="zoom:80%;"><p>这里调用 <code>selectList()</code> 方法传递的参数是映射配置文件中的 namespace.id值。这样写也不便于后期的维护。如果使用 Mapper 代理方式（如下图）则不存在硬编码问题。</p><img src="/2021/12/19/Maven&MyBatis/image-20210726214636108.png" alt="image-20210726214636108" style="zoom:80%;"><p>通过上面的描述可以看出 Mapper 代理方式的目的：</p><ul><li>解决原生方式中的硬编码</li><li>简化后期执行SQL</li></ul><p>Mybatis 官网也是推荐使用 Mapper 代理的方式。下图是截止官网的图片</p><p><img src="/2021/12/19/Maven&MyBatis/image-20210726215339568.png" alt="image-20210726215339568"></p><h4 id="2-3-2-使用Mapper代理要求"><a href="#2-3-2-使用Mapper代理要求" class="headerlink" title="2.3.2  使用Mapper代理要求"></a>2.3.2  使用Mapper代理要求</h4><p>使用Mapper代理方式，必须满足以下要求：</p><ul><li><p>定义与SQL映射文件同名的Mapper接口，并且将Mapper接口和SQL映射文件放置在同一目录下。如下图：</p><img src="/2021/12/19/Maven&MyBatis/image-20210726215946951.png" alt="image-20210726215946951" style="zoom:80%;"></li><li><p>设置SQL映射文件的namespace属性为Mapper接口全限定名</p><img src="/2021/12/19/Maven&MyBatis/image-20210726220053883.png" alt="image-20210726220053883" style="zoom:80%;"></li><li><p>在 Mapper 接口中定义方法，方法名就是SQL映射文件中sql语句的id，并保持参数类型和返回值类型一致</p><img src="/2021/12/19/Maven&MyBatis/image-20210726223216517.png" alt="image-20210726223216517" style="zoom:70%;"></li></ul><h4 id="2-3-3-案例代码实现"><a href="#2-3-3-案例代码实现" class="headerlink" title="2.3.3  案例代码实现"></a>2.3.3  案例代码实现</h4><ul><li><p>在 <code>com.itheima.mapper</code> 包下创建 UserMapper接口，代码如下：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">UserMapper</span> </span>&#123;</span><br><span class="line">    <span class="function">List&lt;User&gt; <span class="title">selectAll</span><span class="params">()</span></span>;</span><br><span class="line">    <span class="function">User <span class="title">selectById</span><span class="params">(<span class="keyword">int</span> id)</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>在 <code>resources</code> 下创建 <code>com/itheima/mapper</code> 目录，并在该目录下创建 UserMapper.xml 映射配置文件</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">    namespace:名称空间。必须是对应接口的全限定名</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">namespace</span>=<span class="string">&quot;com.itheima.mapper.UserMapper&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;selectAll&quot;</span> <span class="attr">resultType</span>=<span class="string">&quot;com.itheima.pojo.User&quot;</span>&gt;</span></span><br><span class="line">        select *</span><br><span class="line">        from tb_user;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mapper</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>在 <code>com.itheima</code> 包下创建 MybatisDemo2 测试类，代码如下：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Mybatis 代理开发</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyBatisDemo2</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//1. 加载mybatis的核心配置文件，获取 SqlSessionFactory</span></span><br><span class="line">        String resource = <span class="string">&quot;mybatis-config.xml&quot;</span>;</span><br><span class="line">        InputStream inputStream = Resources.getResourceAsStream(resource);</span><br><span class="line">        SqlSessionFactory sqlSessionFactory = <span class="keyword">new</span> SqlSessionFactoryBuilder().build(inputStream);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//2. 获取SqlSession对象，用它来执行sql</span></span><br><span class="line">        SqlSession sqlSession = sqlSessionFactory.openSession();</span><br><span class="line">        <span class="comment">//3. 执行sql</span></span><br><span class="line">        <span class="comment">//3.1 获取UserMapper接口的代理对象</span></span><br><span class="line">        UserMapper userMapper = sqlSession.getMapper(UserMapper.class);</span><br><span class="line">        List&lt;User&gt; users = userMapper.selectAll();</span><br><span class="line"></span><br><span class="line">        System.out.println(users);</span><br><span class="line">        <span class="comment">//4. 释放资源</span></span><br><span class="line">        sqlSession.close();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><p>==注意：==</p><p>如果Mapper接口名称和SQL映射文件名称相同，并在同一目录下，则可以使用包扫描的方式简化SQL映射文件的加载。也就是将核心配置文件的加载映射配置文件的配置修改为</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">mappers</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--加载sql映射文件--&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- &lt;mapper resource=&quot;com/itheima/mapper/UserMapper.xml&quot;/&gt;--&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--Mapper代理方式--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">package</span> <span class="attr">name</span>=<span class="string">&quot;com.itheima.mapper&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mappers</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="2-4-核心配置文件"><a href="#2-4-核心配置文件" class="headerlink" title="2.4  核心配置文件"></a>2.4  核心配置文件</h3><p>核心配置文件中现有的配置之前已经给大家进行了解释，而核心配置文件中还可以配置很多内容。我们可以通过查询官网看可以配置的内容</p><img src="/2021/12/19/Maven&MyBatis/image-20210726221454927.png" alt="image-20210726221454927" style="zoom:80%;"><p>接下来我们先对里面的一些配置进行讲解。</p><h4 id="2-4-1-多环境配置"><a href="#2-4-1-多环境配置" class="headerlink" title="2.4.1  多环境配置"></a>2.4.1  多环境配置</h4><p>在核心配置文件的 <code>environments</code> 标签中其实是可以配置多个 <code>environment</code> ，使用 <code>id</code> 给每段环境起名，在 <code>environments</code> 中使用 <code>default=&#39;环境id&#39;</code> 来指定使用哪儿段配置。我们一般就配置一个 <code>environment</code> 即可。</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">environments</span> <span class="attr">default</span>=<span class="string">&quot;development&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">environment</span> <span class="attr">id</span>=<span class="string">&quot;development&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">transactionManager</span> <span class="attr">type</span>=<span class="string">&quot;JDBC&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dataSource</span> <span class="attr">type</span>=<span class="string">&quot;POOLED&quot;</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--数据库连接信息--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;driver&quot;</span> <span class="attr">value</span>=<span class="string">&quot;com.mysql.jdbc.Driver&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;url&quot;</span> <span class="attr">value</span>=<span class="string">&quot;jdbc:mysql:///mybatis?useSSL=false&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;username&quot;</span> <span class="attr">value</span>=<span class="string">&quot;root&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;password&quot;</span> <span class="attr">value</span>=<span class="string">&quot;1234&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dataSource</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">environment</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">environment</span> <span class="attr">id</span>=<span class="string">&quot;test&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">transactionManager</span> <span class="attr">type</span>=<span class="string">&quot;JDBC&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dataSource</span> <span class="attr">type</span>=<span class="string">&quot;POOLED&quot;</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--数据库连接信息--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;driver&quot;</span> <span class="attr">value</span>=<span class="string">&quot;com.mysql.jdbc.Driver&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;url&quot;</span> <span class="attr">value</span>=<span class="string">&quot;jdbc:mysql:///mybatis?useSSL=false&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;username&quot;</span> <span class="attr">value</span>=<span class="string">&quot;root&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;password&quot;</span> <span class="attr">value</span>=<span class="string">&quot;1234&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dataSource</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">environment</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">environments</span>&gt;</span>=</span><br></pre></td></tr></table></figure><h4 id="2-4-2-类型别名"><a href="#2-4-2-类型别名" class="headerlink" title="2.4.2  类型别名"></a>2.4.2  类型别名</h4><p>在映射配置文件中的 <code>resultType</code> 属性需要配置数据封装的类型（类的全限定名）。而每次这样写是特别麻烦的，Mybatis 提供了 <code>类型别名</code>(typeAliases) 可以简化这部分的书写。</p><p>首先需要现在核心配置文件中配置类型别名，也就意味着给pojo包下所有的类起了别名（别名就是类名），不区分大小写。内容如下：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">typeAliases</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--name属性的值是实体类所在包--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">package</span> <span class="attr">name</span>=<span class="string">&quot;com.itheima.pojo&quot;</span>/&gt;</span> </span><br><span class="line"><span class="tag">&lt;/<span class="name">typeAliases</span>&gt;</span></span><br></pre></td></tr></table></figure><p>通过上述的配置，我们就可以简化映射配置文件中 <code>resultType</code> 属性值的编写</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">namespace</span>=<span class="string">&quot;com.itheima.mapper.UserMapper&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;selectAll&quot;</span> <span class="attr">resultType</span>=<span class="string">&quot;user&quot;</span>&gt;</span></span><br><span class="line">        select * from tb_user;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mapper</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      
      <category domain="http://shicheng.cool/categories/Maven-MyBatis%E7%9A%84%E4%BD%BF%E7%94%A8/">Maven&amp;MyBatis的使用</category>
      
      
      <category domain="http://shicheng.cool/tags/Maven-MyBatis%E7%9A%84%E4%BD%BF%E7%94%A8/">Maven&amp;MyBatis的使用</category>
      
      
      <comments>http://shicheng.cool/2021/12/19/Maven&amp;MyBatis/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>如果有什么问题请加我微信，(●&#39;◡&#39;●)</title>
      <link>http://shicheng.cool/2021/12/15/Weixin/</link>
      <guid>http://shicheng.cool/2021/12/15/Weixin/</guid>
      <pubDate>Wed, 15 Dec 2021 05:10:15 GMT</pubDate>
      
        
        
      <description>&lt;figure class=&quot;highlight plaintext&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span c</description>
        
      
      
      
      <content:encoded><![CDATA[<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Email:1041151583@qq.com</span><br><span class="line">vx:</span><br><span class="line">注意：添加好友时请备注来历</span><br></pre></td></tr></table></figure><p><img src="/2021/12/15/Weixin/weixin.png"></p>]]></content:encoded>
      
      
      <category domain="http://shicheng.cool/categories/%E6%88%91%E7%9A%84%E8%81%94%E7%B3%BB%E6%96%B9%E5%BC%8F-%E2%97%8F-%E2%97%A1-%E2%97%8F/">我的联系方式(●&#39;◡&#39;●)</category>
      
      
      <category domain="http://shicheng.cool/tags/%E5%85%B3%E4%BA%8E-%E6%88%91%E7%9A%84%E8%81%94%E7%B3%BB%E6%96%B9%E5%BC%8F/">关于-我的联系方式</category>
      
      
      <comments>http://shicheng.cool/2021/12/15/Weixin/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>Mysql的安装与卸载</title>
      <link>http://shicheng.cool/2021/12/13/MySQL%E5%AE%89%E8%A3%85%E6%96%87%E6%A1%A3/</link>
      <guid>http://shicheng.cool/2021/12/13/MySQL%E5%AE%89%E8%A3%85%E6%96%87%E6%A1%A3/</guid>
      <pubDate>Mon, 13 Dec 2021 09:02:10 GMT</pubDate>
      
        
        
      <description>&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;安装环境:Win10 64位&lt;/strong&gt;&lt;br&gt;&lt;strong&gt;软件版本:MySQL 5.7.24 解压版&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;一、下载&quot;&gt;&lt;a href=&quot;#一、下载&quot; cl</description>
        
      
      
      
      <content:encoded><![CDATA[<blockquote><p><strong>安装环境:Win10 64位</strong><br><strong>软件版本:MySQL 5.7.24 解压版</strong></p></blockquote><h2 id="一、下载"><a href="#一、下载" class="headerlink" title="一、下载"></a>一、下载</h2><p>点开下面的链接：<br><a href="https://downloads.mysql.com/archives/community/">https://downloads.mysql.com/archives/community/</a></p><p>如果需要我的版本请加VX，文章结尾有VX链接</p><p>选择选择和自己<strong>系统位数</strong>相对应的版本点击右边的<code>Download</code>，此时会进到另一个页面，不用理会上面的登录和注册按钮，直接点击<code>No thanks, just start my download.</code>就可以下载。</p><hr><h2 id="二、安装-解压"><a href="#二、安装-解压" class="headerlink" title="二、安装(解压)"></a>二、安装(解压)</h2><p>下载完成后我们得到的是一个压缩包，将其解压，我们就可以得到MySQL 5.7.24的软件本体了(就是一个文件夹)，我们可以把它放在你想安装的位置。</p><h2 id="三、配置"><a href="#三、配置" class="headerlink" title="三、配置"></a>三、配置</h2><h3 id="1-添加环境变量"><a href="#1-添加环境变量" class="headerlink" title="1. 添加环境变量"></a>1. 添加环境变量</h3><blockquote><p>环境变量里面有很多选项，这里我们只用到<code>Path</code>这个参数。为什么在初始化的开始要添加环境变量呢？<br>在黑框(即CMD)中输入一个可执行程序的名字，Windows会先在环境变量中的<code>Path</code>所指的路径中寻找一遍，如果找到了就直接执行，没找到就在当前工作目录找，如果还没找到，就报错。我们添加环境变量的目的就是能够在任意一个黑框直接调用MySQL中的相关程序而不用总是修改工作目录，大大简化了操作。</p></blockquote><p>右键<code>此电脑</code>→<code>属性</code>，点击<code>高级系统设置</code></p><p>点击<code>环境变量</code></p><p><img src="/2021/12/13/MySQL%E5%AE%89%E8%A3%85%E6%96%87%E6%A1%A3/1.png"></p><p>点击<code>新建</code> </p><p><img src="/2021/12/13/MySQL%E5%AE%89%E8%A3%85%E6%96%87%E6%A1%A3/2.png"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">MYSQL_HOME:你的路径 例如我的是:E:\StudyTools\MySql\mysql-5.7.24-winx64</span><br><span class="line">那么我的路径就是MYSQL_HOME:E:\StudyTools\MySql\mysql-5.7.24-winx64</span><br></pre></td></tr></table></figure><p>在[系统环境的Path]下编辑</p><p><img src="/2021/12/13/MySQL%E5%AE%89%E8%A3%85%E6%96%87%E6%A1%A3/3.png"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">点击编辑：</span><br><span class="line">添加：%MYSQL_HOME%bin</span><br></pre></td></tr></table></figure><p>最后点击确定。</p><p><strong>如何验证是否添加成功？</strong></p><p>右键开始菜单(就是屏幕左下角)，选择<code>命令提示符(管理员)</code>，打开黑框，敲入<code>mysql</code>，回车。<br>如果提示<code>Can&#39;t connect to MySQL server on &#39;localhost&#39;</code>则证明添加成功；<br>如果提示<code>mysql不是内部或外部命令，也不是可运行的程序或批处理文件</code>则表示添加添加失败，请重新检查步骤并重试。</p><h3 id="2-新建配置文件"><a href="#2-新建配置文件" class="headerlink" title="2. 新建配置文件"></a>2. 新建配置文件</h3><p>在mysql-5.7.24-winx64下新建一个文本文件，内容如下：</p><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">[mysql]</span></span><br><span class="line"><span class="meta">default-character-set</span>=<span class="string">utf8</span></span><br><span class="line"></span><br><span class="line"><span class="attr">[mysqld]</span></span><br><span class="line"><span class="meta">character-set-server</span>=<span class="string">utf8</span></span><br><span class="line"><span class="meta">default-storage-engine</span>=<span class="string">INNODB</span></span><br><span class="line"><span class="attr">sql_mode</span>=<span class="string">STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION</span></span><br></pre></td></tr></table></figure><p>把上面的文本文件另存为，在保存类型里选<code>所有文件 (*.*)</code>，文件名叫<code>my.ini</code>，存放的路径为MySQL的<code>根目录</code>(例如我的是<code>E:\StudyTools\mysql-5.7.24-winx64</code>,根据自己的MySQL目录位置修改)。</p><p>上面代码意思就是配置数据库的默认编码集为utf-8和默认存储引擎为INNODB。</p><h3 id="3-初始化MySQL"><a href="#3-初始化MySQL" class="headerlink" title="3. 初始化MySQL"></a>3. 初始化MySQL</h3><p>在[cmd](<a href="https://www.baidu.com/s?wd=cmd%E6%80%8E%E4%B9%88%E6%89%93%E5%BC%80&rsv_spt=1&rsv_iqid=0xcc736c1100096bda&issp=1&f=3&rsv_bp=1&rsv_idx=2&ie=utf-8&rqlang=cn&tn=baiduhome_pg&rsv_enter=1&rsv_dl=ts_0&oq=cmd&rsv_btype=t&rsv_t=0ad8BpIWOl+BYcr7XxInZzlqPbRPUNURUCczyCFXg/RVi76sKNbeQoXUiOcRpqfm9XuE&rsv_sug3=5&rsv_sug1=5&rsv_sug7=100&rsv_pq=94712f61000034f2&rsv_sug2=1&prefixsug=cmd&rsp=0&rsv_sug4=1362">cmd怎么打开_百度搜索 (baidu.com)</a>)的黑框中敲入<code>mysqld --initialize-insecure</code>，回车，稍微等待一会，如果出现没有出现报错信息(如下图)则证明data目录初始化没有问题，此时再查看MySQL目录下已经有data目录生成。注意CMD以管理员身份运行</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysqld --initialize-insecure</span><br></pre></td></tr></table></figure><h3 id="4-注册MySQL服务"><a href="#4-注册MySQL服务" class="headerlink" title="4. 注册MySQL服务"></a>4. 注册MySQL服务</h3><p>在黑框里敲入<code>mysqld -install</code>，回车。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysqld -install</span><br></pre></td></tr></table></figure><p>现在的计算机上已经安装好了MySQL服务了。</p><p>MySQL服务器</p><h3 id="5-启动MySQL服务"><a href="#5-启动MySQL服务" class="headerlink" title="5. 启动MySQL服务"></a>5. 启动MySQL服务</h3><p>在黑框里敲入<code>net start mysql</code>，回车。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">net start mysql  <span class="comment">// 启动mysql服务</span></span><br><span class="line">    </span><br><span class="line">net stop mysql  <span class="comment">// 停止mysql服务</span></span><br></pre></td></tr></table></figure><h3 id="6-修改默认账户密码"><a href="#6-修改默认账户密码" class="headerlink" title="6. 修改默认账户密码"></a>6. 修改默认账户密码</h3><p>在黑框里敲入<code>mysqladmin -u root password 1234</code>，这里的<code>1234</code>就是指默认管理员(即root账户)的密码，可以自行修改成你喜欢的。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysqladmin -u root password 1234</span><br></pre></td></tr></table></figure><p><strong>至此，MySQL 5.7 解压版安装完毕！</strong></p><hr><h2 id="四、登录MySQL"><a href="#四、登录MySQL" class="headerlink" title="四、登录MySQL"></a>四、登录MySQL</h2><p>右键开始菜单，选择<code>命令提示符</code>，打开黑框。<br>在黑框中输入，<code>mysql -uroot -p1234</code>，回车，出现下图且左下角为<code>mysql&gt;</code>，则登录成功。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql -uroot -p1234</span><br></pre></td></tr></table></figure><p><strong>到这里你就可以开始你的MySQL之旅了！</strong></p><p>退出mysql：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">exit</span><br><span class="line">quit</span><br></pre></td></tr></table></figure><p>登陆参数：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql -u用户名 -p密码 -h要连接的mysql服务器的ip地址(默认127.0.0.1) -P端口号(默认3306)</span><br></pre></td></tr></table></figure><hr><h2 id="五、卸载MySQL"><a href="#五、卸载MySQL" class="headerlink" title="五、卸载MySQL"></a>五、卸载MySQL</h2><p>如果你想卸载MySQL，也很简单。</p><p>右键开始菜单，选择<code>命令提示符(管理员)</code>，打开黑框。</p><ol><li>敲入<code>net stop mysql</code>，回车。</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">net stop mysql</span><br></pre></td></tr></table></figure><ol start="2"><li>再敲入<code>mysqld -remove mysql</code>，回车。</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysqld -remove mysql</span><br></pre></td></tr></table></figure><ol start="3"><li>最后删除MySQL目录及相关的环境变量。</li></ol><p><strong>至此，MySQL卸载完成！</strong> </p>]]></content:encoded>
      
      
      <category domain="http://shicheng.cool/categories/Mysql%E7%9A%84%E5%AE%89%E8%A3%85%E4%B8%8E%E5%8D%B8%E8%BD%BD/">Mysql的安装与卸载</category>
      
      
      
      <comments>http://shicheng.cool/2021/12/13/MySQL%E5%AE%89%E8%A3%85%E6%96%87%E6%A1%A3/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>常用Linux操作命令</title>
      <link>http://shicheng.cool/2021/12/12/Linux/</link>
      <guid>http://shicheng.cool/2021/12/12/Linux/</guid>
      <pubDate>Sun, 12 Dec 2021 06:26:48 GMT</pubDate>
      
        
        
      <description>&lt;h1 id=&quot;操作系统的常用指令&quot;&gt;&lt;a href=&quot;#操作系统的常用指令&quot; class=&quot;headerlink&quot; title=&quot;操作系统的常用指令:&quot;&gt;&lt;/a&gt;&lt;strong&gt;操作系统的常用指令:&lt;/strong&gt;&lt;/h1&gt;&lt;h1 id=&quot;ls-list-列出当前的所有文件&quot;</description>
        
      
      
      
      <content:encoded><![CDATA[<h1 id="操作系统的常用指令"><a href="#操作系统的常用指令" class="headerlink" title="操作系统的常用指令:"></a><strong>操作系统的常用指令:</strong></h1><h1 id="ls-list-列出当前的所有文件"><a href="#ls-list-列出当前的所有文件" class="headerlink" title="ls : (list) 列出当前的所有文件"></a>ls : (list) 列出当前的所有文件</h1><h2 id="路径-绝对路径与相对路径"><a href="#路径-绝对路径与相对路径" class="headerlink" title="路径:绝对路径与相对路径"></a>路径:绝对路径与相对路径</h2><p>​        相对路径：指定是当前目录下的….</p><p>​        绝对路径：一般都是/开始…不需要参照物</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">ls /root ---&gt;绝对路径 在根目录下找root</span><br><span class="line">ls root  ----&gt;在当前目录下寻找root</span><br><span class="line">./ 当前上级目录</span><br><span class="line">.//当前上上级目录</span><br><span class="line">ls 选项 路径：</span><br><span class="line">ls -l 路径：列出所有的文件以及详细信息</span><br><span class="line">ls -la 路径：列出所有的文件包括隐藏文件</span><br><span class="line">ls -lh 路径：列出所有的文件并以可读性较高的方式呈现(可在中间加a ---&gt; ls -lah)</span><br><span class="line"></span><br><span class="line">注意: ls列出的结果颜色说明，其中蓝色的名称表示文件夹，黑色的表示文件，绿色的其权</span><br><span class="line">限为拥有所有权限。</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>​    上述列表中的第一列字符表示文档的类型，其中“-”表示该行对应的文档类型为文件,“d”表示文档类型为文件夹。（linux目录的文件大小显示的都是4k不代表是4k大小。并且文件大小的单位灵活）</p><h1 id="pwd-（打印当前工作目录）"><a href="#pwd-（打印当前工作目录）" class="headerlink" title="pwd:（打印当前工作目录）"></a>pwd:（打印当前工作目录）</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">print working directory :</span><br></pre></td></tr></table></figure><h1 id="cd-chang-diretory-切换当前的工作目录的"><a href="#cd-chang-diretory-切换当前的工作目录的" class="headerlink" title="cd:(chang diretory 切换当前的工作目录的)"></a>cd:(chang diretory 切换当前的工作目录的)</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">cd 路径（支持相对和绝对路径 只要它存在）</span><br><span class="line"></span><br><span class="line">cd /root/java/（后面的“/”可加可不加 没有影响）</span><br><span class="line"></span><br><span class="line">在linux中有一个特殊的符号&quot;~&quot;表示当前用户的家目录，怎么切换过去呢！cd ~</span><br></pre></td></tr></table></figure><h1 id="mkdir-make-diretory-创建目录"><a href="#mkdir-make-diretory-创建目录" class="headerlink" title="mkdir:(make diretory 创建目录)"></a>mkdir:(make diretory 创建目录)</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">1. mkdir 路径</span><br><span class="line">2. mkdir 文件夹名字 （在当前的目录下创建一个目录）</span><br><span class="line">在指定目录下创建文件夹或者目录代码：</span><br><span class="line">mkdir /root/SC/baobaolin（在当前root的目录下执行mkdir对在/root/SC/的目录下创建一个baobaolin文件夹）</span><br><span class="line">3. mkdir -p 路径</span><br><span class="line">含义:当一次性创建多层不存在的目录的时候，添加-p 参数，否则会报错</span><br><span class="line">mkdir -p /a/b/c/d 一次性创建a b c d四个文件夹否则会报错的</span><br><span class="line">4. mkdir 路径1 路径2 路径3 .....</span><br><span class="line">一次性创建多个文件夹</span><br></pre></td></tr></table></figure><h1 id="touch-创建文件）"><a href="#touch-创建文件）" class="headerlink" title="touch:(创建文件）"></a>touch:(创建文件）</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">touch：创建文件</span><br><span class="line">1. touch 文件路径 [路径可以是直接的文件名也可以是路径]</span><br><span class="line">可以创建多个文件空格隔开即可 即：touch linux1.txt linux2.txt</span><br><span class="line">2. 在特定路径下创建文件</span><br><span class="line">图2 注意没空格touch /root/SC/baobaolin/linux.txt</span><br></pre></td></tr></table></figure><h1 id="cp：-copy-复制文件-文件夹到指定的位置"><a href="#cp：-copy-复制文件-文件夹到指定的位置" class="headerlink" title="cp：(copy 复制文件/文件夹到指定的位置)"></a>cp：(copy 复制文件/文件夹到指定的位置)</h1><blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">1. 复制文件/文件夹到指定的位置</span><br><span class="line">文件：</span><br><span class="line">cp 被复制的文档路径 文档被复制到的路径</span><br><span class="line">cp /root/SC/baobaolin/linux.txt /root/hello/(这里可以写复制过后的文件名字)</span><br><span class="line">cp /root/SC/baobaolin/linux.txt /root/hello/hello.txt</span><br><span class="line">注意: Linux在复制过程中是可以重新对新位置的文件进行重命名的，但是如果不是必须的</span><br><span class="line">需要，则建议保持前后名称一致。</span><br><span class="line">文件夹：</span><br><span class="line">注意:当使用cp命令进行文件夹复制操作的时候需要添加选项&quot;-r&quot;否则会被略过不成功</span><br><span class="line">&quot;-r&quot;表示递归 把文件夹里面的文件和文件夹全都拿过来</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure></blockquote><h1 id="mv：移动文档到新的位置"><a href="#mv：移动文档到新的位置" class="headerlink" title="mv：移动文档到新的位置"></a>mv：移动文档到新的位置</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">1. 其中文档包括（文件以及文件夹）</span><br><span class="line">mv 需要移动的文档路径 需要保存的位置（路径）</span><br><span class="line">移东之后old place是不存在的了 new place有了文件，其中大小名字以及内容是不会发生改变的</span><br><span class="line">2. mv还可以重新命名（文件和文件夹）</span><br><span class="line">mv Linux1.txt linux13123.txt（把linux1.txt改成Linux13123.txt）</span><br></pre></td></tr></table></figure><h1 id="rm-remove-删除-移除"><a href="#rm-remove-删除-移除" class="headerlink" title="rm:(remove 删除 移除)"></a>rm:(remove 删除 移除)</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">1. 移除/删除文档</span><br><span class="line">rm 选项 需要移除的文档路径</span><br><span class="line">在删除的时候如果不带选项，会提示是否删除，如果需要确认则输入“y/yes”， 否则输入n/no”按下回车。注意:如果在删除的时候不想频繁的确认，则可以在指令中添加选项“f”,表示force(强制)。即</span><br><span class="line">rm -f xxx</span><br><span class="line"></span><br><span class="line">选项：</span><br><span class="line">-f (force)</span><br><span class="line">-r</span><br><span class="line">注意:删除一个目录的时候需要做递归删除，并且-般也不需要进行删除确认询问，所以移除目录的时候一般需要 使用-rf选项。</span><br><span class="line"></span><br><span class="line">2. 删除多个文件</span><br><span class="line">rm -rf 文件夹名字 文件名字</span><br><span class="line"></span><br><span class="line">3. 要删除一个目录下有公共特性的文档，例如都以Linux开头</span><br><span class="line">rm -f linux*</span><br><span class="line">其中*叫通配符，意思是表示任意的字符，linux*泽表示只要是linux开头，后续字符则不管了</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="vim-vim是一款文本编辑器"><a href="#vim-vim是一款文本编辑器" class="headerlink" title="vim:(vim是一款文本编辑器)"></a>vim:(vim是一款文本编辑器)</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">1. vim 文件路径和名字（没有文件夹）打开一个文件（可以不存在也可以存在）</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="输出重定向"><a href="#输出重定向" class="headerlink" title="输出重定向"></a>输出重定向</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">一般命名的输出都会显示在终端里面的，有时候需要将一些命名执行的结果想要保存到文件中进行后续的统计分析，则这个时候就需要使用到输出重定向技术</span><br><span class="line">1. &gt;  覆盖输出，会覆盖掉原先的文件内容</span><br><span class="line">2. &gt;&gt; 追加输出 ，不会覆盖原始文件的文件内容 会在原始内容末尾继续追加</span><br><span class="line">&gt; and &gt;&gt; 都有执行新文件创建的功能</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="cat指令"><a href="#cat指令" class="headerlink" title="cat指令"></a>cat指令</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">1. cat有直接打开文件的功能</span><br><span class="line">cat 文件的路径</span><br><span class="line">（像比于vim cat更加具体而且不能编辑 就只是能看而已。查看所有的文件）</span><br><span class="line">2. cat还可对文件内容进行合并(后面的文件可以不存在 如果不存在就创建一个)</span><br><span class="line">cat 待合并的文件路径1（文件名） 待合并的文件路径2（文件名） .... 待合并的文件路径n（文件名） &gt;(&gt;&gt;) 合并之后的文件路径（文件名）</span><br></pre></td></tr></table></figure><p>![](E:\StudyTools\Typora\File\Linux-imag\cat.png</p><h1 id="df指令-查看磁盘空间"><a href="#df指令-查看磁盘空间" class="headerlink" title="df指令(查看磁盘空间)"></a>df指令(查看磁盘空间)</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">语法格式：</span><br><span class="line">df -h</span><br><span class="line">(-h 以可读性较高的形式查看)</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="free指令-查看内存的使用情况"><a href="#free指令-查看内存的使用情况" class="headerlink" title="free指令(查看内存的使用情况)"></a>free指令(查看内存的使用情况)</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">语法格式：</span><br><span class="line">free -m</span><br><span class="line">(-m表示的是以MB为单位进行查看)</span><br><span class="line"></span><br><span class="line">剩余的真实可以用的内存为1445mb。</span><br><span class="line">Swap:用于临时内存，当系统真实内存不够用的时候可以临时使用磁盘空间来充当内存。</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="head指令-查看一个文件的前n行，如果布置的n，则默认显示前10行"><a href="#head指令-查看一个文件的前n行，如果布置的n，则默认显示前10行" class="headerlink" title="head指令(查看一个文件的前n行，如果布置的n，则默认显示前10行)"></a>head指令(查看一个文件的前n行，如果布置的n，则默认显示前10行)</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">语法格式：</span><br><span class="line">head -n 文件路径和名字(n)表示数字</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="tail指令-查看一个文件的后n行，如果布置的n，则默认显示前10行"><a href="#tail指令-查看一个文件的后n行，如果布置的n，则默认显示前10行" class="headerlink" title="tail指令(查看一个文件的后n行，如果布置的n，则默认显示前10行)"></a>tail指令(查看一个文件的后n行，如果布置的n，则默认显示前10行)</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">语法格式：</span><br><span class="line">tail -n 文件路径和名字</span><br><span class="line"></span><br><span class="line">可以通过tail指令来查看一个文件的动态变化</span><br><span class="line">语法格式：</span><br><span class="line">tail -f 文件路径和名字</span><br><span class="line">一般用来查看系统的日志比较多</span><br></pre></td></tr></table></figure><h1 id="less-查看文件，以较少的内容进行输出，按下辅助键查看更多"><a href="#less-查看文件，以较少的内容进行输出，按下辅助键查看更多" class="headerlink" title="less(查看文件，以较少的内容进行输出，按下辅助键查看更多)"></a>less(查看文件，以较少的内容进行输出，按下辅助键查看更多)</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">语法格式：</span><br><span class="line">less 需要查看的文件路径</span><br><span class="line">辅助键(数字+回车，空格，上下键)</span><br></pre></td></tr></table></figure><h1 id="wc-统计文件内容信息-行，单词个数，字节数"><a href="#wc-统计文件内容信息-行，单词个数，字节数" class="headerlink" title="wc(统计文件内容信息(行，单词个数，字节数))"></a>wc(统计文件内容信息(行，单词个数，字节数))</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">语法格式：</span><br><span class="line">wc -lwc 需要统计的文件路径文件名</span><br><span class="line">-l 表示lines 行数</span><br><span class="line">-w 表示words 单词数 依照空格判断单词 [我 爱 你] 三个单词</span><br><span class="line">-c 表示bytes 字节数 </span><br></pre></td></tr></table></figure><h1 id="date指令-重点"><a href="#date指令-重点" class="headerlink" title="date指令(重点)"></a>date指令(重点)</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">作用:表示操作时间日期的(读取、设置) 主要用来读取的</span><br><span class="line">语法1. </span><br><span class="line">date 输出格式 [2021年 11月 26日 星期五 09:17:40 CST]</span><br><span class="line"></span><br><span class="line">语法2. </span><br><span class="line">date +%F (等价与date “%Y-%m-%d”)输出格式[2021-11-26]</span><br><span class="line"></span><br><span class="line">语法3. </span><br><span class="line">date &quot;+%F %T&quot; 输出格式[2021-11-26 09:25:15] 年月日与时分秒成为一个不可分割的整体(等价于 date &quot;+%Y-%m-%d %H:%M:%S&quot;)</span><br><span class="line"></span><br><span class="line">语法4.获取之前或者之后的某个时间(备份)</span><br><span class="line">（-1 day 表示昨天的）</span><br><span class="line">[+/-][day month year]</span><br><span class="line">date -d &quot;-1 day&quot; &quot;+%Y-%m-%d %H:%M:%S&quot;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">%F:表示完整的年月日</span><br><span class="line">%T:表示完整的时分秒</span><br><span class="line">%Y:表示四位年份</span><br><span class="line">%m:表示两位的月份（带前导零）</span><br><span class="line">%d:表示日期（带前导零）</span><br><span class="line">%H:表示小时（带前导零）</span><br><span class="line">%M:表示分钟（带前导零）</span><br><span class="line">%S:表示的秒数（带前导零）</span><br></pre></td></tr></table></figure><h1 id="cal指令"><a href="#cal指令" class="headerlink" title="cal指令"></a>cal指令</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">作用：操作日历的</span><br><span class="line">语法1：</span><br><span class="line">cal（直接输出当前月份的日历） = cal -1</span><br><span class="line">语法2：</span><br><span class="line">cal -3（输出上一个月加本月加下个月的日历）</span><br><span class="line">语法3：</span><br><span class="line">cal -y（输出一年的月份）</span><br></pre></td></tr></table></figure><h1 id="clear-ctrl-l-指令"><a href="#clear-ctrl-l-指令" class="headerlink" title="clear/ctrl + l 指令"></a>clear/ctrl + l 指令</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">ctrl +l = clear：清除终端中以及存在的命令和结果</span><br><span class="line"></span><br><span class="line">需要注意的是,该命令并不是真的清除了之前的信息,而是把之前的信息的隐藏到了最上面，通过滚动条继续查看以前的信息。</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="管道（重要）"><a href="#管道（重要）" class="headerlink" title="管道（重要）"></a>管道（重要）</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">管道符：|</span><br><span class="line">作用：一般可以用于过滤，特殊，扩展处理。</span><br><span class="line">语法1：</span><br><span class="line">管道不能单独使用，必须配合前面所讲的一些指令一起使用，管道起辅助作用</span><br><span class="line">通过管道查询出当前目录下包含&quot;linux&quot;字母的文档名字</span><br><span class="line">ls |grep linux</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">针对上面这个命令说明:</span><br><span class="line">1.以管道作为分界线，前面的命令有个输出，后面需要先输入，然后再过滤，最后再输出-[通俗的讲就是管道前面的输出就是后面指令的输入]</span><br><span class="line">2.grep:用于过滤</span><br><span class="line">3.ls |wc -l        [wc -w][wc -c]</span><br><span class="line">统计文档个数</span><br></pre></td></tr></table></figure><h1 id="Linux高级指令"><a href="#Linux高级指令" class="headerlink" title="Linux高级指令"></a>Linux高级指令</h1><h1 id><a href="#" class="headerlink" title></a></h1><h1 id="hostname-操作服务器主机名（读取或设置…）"><a href="#hostname-操作服务器主机名（读取或设置…）" class="headerlink" title="hostname(操作服务器主机名（读取或设置…）)"></a>hostname(操作服务器主机名（读取或设置…）)</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">语法格式：</span><br><span class="line">1. hostname -表示输出完整的主机名</span><br><span class="line">输出了Linux_SC</span><br><span class="line">2. hostname -f -表示输出当前主机名中的-f -&gt; FQDN （全限定域名）</span><br><span class="line">Linux_SC</span><br></pre></td></tr></table></figure><h1 id="-1"><a href="#-1" class="headerlink" title></a></h1><h1 id="id指令-查看一个用户的基本信息-包含用户id-—用户组id—-附加组id…-该指令如果不指定用户则默认当前用户"><a href="#id指令-查看一个用户的基本信息-包含用户id-—用户组id—-附加组id…-该指令如果不指定用户则默认当前用户" class="headerlink" title="id指令(查看一个用户的基本信息 包含用户id —用户组id—- 附加组id…) 该指令如果不指定用户则默认当前用户"></a>id指令(查看一个用户的基本信息 包含用户id —用户组id—- 附加组id…) 该指令如果不指定用户则默认当前用户</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">id card 身份证</span><br><span class="line">语法格式：</span><br><span class="line">1. id 不指定则默认当前用户</span><br><span class="line">2. id 用户名 显示指定用户的基本信息</span><br></pre></td></tr></table></figure><h1 id="whoami-我是谁？显示当前登录的用户名"><a href="#whoami-我是谁？显示当前登录的用户名" class="headerlink" title="whoami(我是谁？显示当前登录的用户名)"></a>whoami(我是谁？显示当前登录的用户名)</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">whoami 返回root 一般用户shell脚本</span><br><span class="line">用于获取当前的操作用户的名字方便记录日志</span><br></pre></td></tr></table></figure><h1 id="ps-ef指令-用于查看服务器的进程信息"><a href="#ps-ef指令-用于查看服务器的进程信息" class="headerlink" title="ps -ef指令(****)(用于查看服务器的进程信息)"></a>ps -ef指令(****)(用于查看服务器的进程信息)</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">选项含义</span><br><span class="line"> -e 等价于&quot;A&quot; 表示列出全部的进程</span><br><span class="line"> -f 显示全部的列| 全字段</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"> UID:该进程执行的用户id</span><br><span class="line"> PID:进程id</span><br><span class="line"> PPID:该进程的父进程id 如果该ppid找不到那么该进程称之为僵尸进程</span><br><span class="line"> C:CPU的占用率 其形式是百分比</span><br><span class="line"> STIME:该进程的启动时间</span><br><span class="line"> TTY:终端设备，发起该进程的设备识别符号 如果显示?则表示该进程并不是由终端设备发起的</span><br><span class="line"> TIME:进程的执行时间</span><br><span class="line"> CMD:该进程的名称或者对应的路径</span><br><span class="line"> </span><br><span class="line"> 多用来查看自己安装的资源</span><br><span class="line"> 100%使用的命令：ps -ef|grep xxx 在ps的结果中过滤出想要查看（xxx）的进程状态</span><br></pre></td></tr></table></figure><h1 id="top指令-查看服务器进程占用的资源"><a href="#top指令-查看服务器进程占用的资源" class="headerlink" title="top指令(查看服务器进程占用的资源)"></a>top指令(查看服务器进程占用的资源)</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">语法：</span><br><span class="line">进入命令 top 动态显示</span><br><span class="line">退出命名 按下q键</span><br><span class="line"></span><br><span class="line">表头含义:</span><br><span class="line">PID:进程id</span><br><span class="line">USER:该进程对于的用户</span><br><span class="line">PR:权重 优先级</span><br><span class="line">NI:用户进程空间内改变过CPU的百分比</span><br><span class="line">VIRT:虚拟内存</span><br><span class="line">RES:常驻内存 [用多少就是多少]</span><br><span class="line">SHR:共享内存</span><br><span class="line">计算一个进程实际使用的内存 = 常驻内存(RES) -共享内存(SHR)</span><br><span class="line">S:表示进行的状态 其中S表示sleep而R表示running运行   |</span><br><span class="line">%CPU:表示CPU占用的百分比                         |</span><br><span class="line">%MEM:表示内存的占用百分比                         |</span><br><span class="line">TIME+:执行的时间</span><br><span class="line">COMMAND:进程的名称还有路径                       |</span><br><span class="line"></span><br><span class="line">方便快捷键：[在运行top的时候，可以按下方便的快捷键]</span><br><span class="line"></span><br><span class="line">M:将结果按照内存(MEN)从低到高进行降序排列</span><br><span class="line">P:表示将结果按照CPU使用率从高到低进行降序排列</span><br><span class="line">1:当服务器拥有多个cpu的时候可以使用“1”快捷键来切换是否展示显示各个cpu的详细信息</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="du-sh指令-查看目录的真实大小"><a href="#du-sh指令-查看目录的真实大小" class="headerlink" title="du -sh指令(查看目录的真实大小)"></a>du -sh指令(查看目录的真实大小)</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">选项含义:</span><br><span class="line">du -sh 路径</span><br><span class="line">-s[summaries]:只显示汇总的大小</span><br><span class="line">-h:表示以较高可读性的形式进行显示</span><br></pre></td></tr></table></figure><h1 id="find指令-用户查找文件"><a href="#find指令-用户查找文件" class="headerlink" title="find指令(用户查找文件)"></a>find指令(用户查找文件)</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">参数有55个</span><br><span class="line">语法格式：</span><br><span class="line">find 路径范围 选项 选项的值</span><br><span class="line">find /root -name linux*.txt</span><br><span class="line">find /root -name &quot;Linux*.txt&quot;</span><br><span class="line">find . -name &quot;*inux*.txt&quot;</span><br><span class="line"></span><br><span class="line">选项：</span><br><span class="line">-name 按照文档名字进行搜索(支持模糊搜索) find /root -type f</span><br><span class="line">-type 按照文档的类型进程搜索find /root -type d</span><br><span class="line">文档的类型：&quot;-&quot;表示文件[在使用find的时候需要用f来替换] &quot;d&quot;表示文件夹</span><br></pre></td></tr></table></figure><h1 id="service指令-控制一些软件的服务启动-停止-重启"><a href="#service指令-控制一些软件的服务启动-停止-重启" class="headerlink" title="service指令(控制一些软件的服务启动/停止/重启)"></a>service指令(控制一些软件的服务启动/停止/重启)</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">service 服务名 start/stop/restart</span><br><span class="line">service apache start</span><br></pre></td></tr></table></figure><h1 id="kill指令"><a href="#kill指令" class="headerlink" title="kill指令"></a>kill指令</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">kill 进程PID 与ps -ef 一起结合用 找到进程PID</span><br><span class="line">Killall 进程名称</span><br><span class="line">killall httpd 包括子进程</span><br></pre></td></tr></table></figure><h1 id="reboot重启"><a href="#reboot重启" class="headerlink" title="reboot重启"></a>reboot重启</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">重启计算机</span><br><span class="line">reboot</span><br><span class="line">rewrite</span><br><span class="line">reset</span><br><span class="line">......</span><br><span class="line"></span><br><span class="line">2. reboot -w</span><br><span class="line">模拟重启，但是不重启(开机关机日志)</span><br></pre></td></tr></table></figure><h1 id="shutdown关机"><a href="#shutdown关机" class="headerlink" title="shutdown关机"></a>shutdown关机</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">关机 慎用</span><br><span class="line">语法：</span><br><span class="line">1.立即关机 shutdown-h now &quot;关机提示&quot; 或者 shutdowun -h -t0[时间14:15]</span><br><span class="line">shutdown -c 直接取消</span><br><span class="line">2.其他关机命令</span><br><span class="line">init0</span><br><span class="line">halt</span><br><span class="line">poweroff</span><br></pre></td></tr></table></figure><h1 id="uptime-输出计算机的在线时间-开机以来到现在的运行时间"><a href="#uptime-输出计算机的在线时间-开机以来到现在的运行时间" class="headerlink" title="uptime(输出计算机的在线时间 开机以来到现在的运行时间)"></a>uptime(输出计算机的在线时间 开机以来到现在的运行时间)</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">uptime 开机多久呢</span><br></pre></td></tr></table></figure><h1 id="uname-获取计算机操作系统的相关信息）"><a href="#uname-获取计算机操作系统的相关信息）" class="headerlink" title="uname(获取计算机操作系统的相关信息）"></a>uname(获取计算机操作系统的相关信息）</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">uname 获取操作系统的类型</span><br><span class="line">uname -a   all获取全部的系统信息（类型-全部主机名-内核版本-发布时间-开源计划）</span><br></pre></td></tr></table></figure><h1 id="netstat-tnlp"><a href="#netstat-tnlp" class="headerlink" title="netstat -tnlp"></a>netstat -tnlp</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">参看网络的连接状态</span><br><span class="line">语法格式：</span><br><span class="line">netstat -tnlp</span><br><span class="line"></span><br><span class="line">选项说明：</span><br><span class="line">-t 表示只列出tcp协议的连接</span><br><span class="line">-n 表示将地址从字母组合转化成ip地址 将协议转化成端口号来显示</span><br><span class="line">-l 只显示”state“状态列中其值为LISTEN（监听）的连接</span><br><span class="line">-p 表示显示对于连接的PID进程名称id</span><br></pre></td></tr></table></figure><h1 id="man-manual-手册（包含了LINUX全部命令的手机-英文的）"><a href="#man-manual-手册（包含了LINUX全部命令的手机-英文的）" class="headerlink" title="man(manual 手册（包含了LINUX全部命令的手机 英文的）)"></a>man(manual 手册（包含了LINUX全部命令的手机 英文的）)</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">man 命令    退出按下q</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">练习题：</span><br><span class="line">1、如何在命令行中快速删除光标前/后的内容?</span><br><span class="line">前: ctrl+u ----- 后: ctrl+k</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">rm -f A*</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="vim-vi-编辑器"><a href="#vim-vi-编辑器" class="headerlink" title="vim/vi(编辑器)"></a>vim/vi(编辑器)</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">Vi编辑器是所有Unix及Linux系统下标准的编辑器，类似于windows系统下的notepad(记事本)编辑器，由于在Unix及Linux系统的任何版本，Vi编辑器是完全相同的，因此可以在其他任何介绍vi的地方都能进一-步了解它,Vi也是Linux中最基本的文本编辑器,学会它后，我们将在Linux的世界里畅行无阻，尤其是在终端中。</span><br><span class="line">关于vim:</span><br><span class="line">    vi和vim都是Linux中的编辑器，不同的是，vim比较高级，可以视为vi的升级本。vi使用于文本编辑，但是vim更适用于coding (写代码的。</span><br><span class="line">    Vim点是光标的移动，模式切换，删除，查找替换，复制，粘贴，撤销命令的使用。</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="vim的三种模式：命令模式-编辑模式-输入模式-末行模式"><a href="#vim的三种模式：命令模式-编辑模式-输入模式-末行模式" class="headerlink" title="vim的三种模式：命令模式 编辑模式(输入模式) 末行模式"></a>vim的三种模式：命令模式 编辑模式(输入模式) 末行模式</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">命令模式:在该模式下是不能对文件直接编辑，可以输入快捷键进行- -些操作(删除行，复制行，移动光标，粘贴等等)[打开文件之后默认进入的模式]</span><br><span class="line"></span><br><span class="line">编辑模式:在该模式下可以对文件的内容进行编辑</span><br><span class="line"></span><br><span class="line">末行模式:可以在末行输入命令来对文件进行操作(搜索、替换、保存、退出、撤销、高亮等等)</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="vim打开文件的方式"><a href="#vim打开文件的方式" class="headerlink" title="vim打开文件的方式"></a>vim打开文件的方式</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">1. vim 文件路径(文件名) ----&gt;打开指定的文件</span><br><span class="line">2. vim 数字 文件的路径 -----&gt;打开指定的文件并且将光标移动到指定行 不指定默认第一行</span><br><span class="line">3. vim +/关键词 文件的路径 ----&gt;打开指定的文件 并且高亮显示关键词</span><br><span class="line">4. vim 文件路径1 文件路径2 文件路径3 .... 同时打开多个文件</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line">1. 命令模式 打开文件第一个看到的模式（打开文件即可进入）</span><br><span class="line">1.光标的移动操作</span><br><span class="line">1.光标移动到行首</span><br><span class="line">按键：shift + 6或者  &#x27;^&#x27; (按下T上面的6 不是小键盘的)</span><br><span class="line">2.光标移动到行尾</span><br><span class="line">按键：shift + 4或者  &#x27;$&#x27; (按下R上面的4 不是小键盘)</span><br><span class="line">3.光标移动到首行</span><br><span class="line">按键：gg [goodgame]</span><br><span class="line">4.光标移动到末行</span><br><span class="line">按键：G</span><br><span class="line">5.翻屏</span><br><span class="line">1.向上翻盘</span><br><span class="line">按键：ctrl + b[bofore] / PgUp</span><br><span class="line">2.向下翻屏</span><br><span class="line">按键：ctrl + f[final] /PgDn</span><br><span class="line"></span><br><span class="line">2.复制操作配合粘贴一起用</span><br><span class="line">1.复制光标所在行</span><br><span class="line">按键：yy</span><br><span class="line">2.粘贴</span><br><span class="line">想要粘贴的地方按下：p</span><br><span class="line">3.以光标所在行为准(包括所在行)，向下复制指定的行数</span><br><span class="line">按键：数字yy</span><br><span class="line">4.可视化复制</span><br><span class="line">按键：ctrl + v 按下↑↓←→来选中需要复制的区块按下yy复制然后p</span><br><span class="line">3.剪切/删除</span><br><span class="line">1.剪切/删除光标所在行</span><br><span class="line">按键：dd  删除之后下一行上移 严格意义上是剪切命令 如果剪切了不粘贴就是删除效果</span><br><span class="line">2.剪切/删除光标所在行为准(包括当前行)，向下删除/剪切指定的行</span><br><span class="line">按键：数字dd</span><br><span class="line">3.剪切/删除光标所在的当前行，但是删除之后下一行不上移</span><br><span class="line">按键：D 当前行变成空白行</span><br><span class="line">4.撤销或者恢复</span><br><span class="line">1.撤销/回复</span><br><span class="line">输入 ---&gt; :u[不属于命令模式了] 或者u undo</span><br><span class="line">2.回复</span><br><span class="line">按键：ctrl + r [取消之前的撤销工作]</span><br><span class="line">扩展1：光标的快速移动</span><br><span class="line">1.快速将光标移动到指定的行数</span><br><span class="line">按键：数字G</span><br><span class="line">2.以当前的光标为准向上或者向下移动n行</span><br><span class="line">按键：数字↑ /数字↓</span><br><span class="line">3.以当前光标为准向左右移动n个字符</span><br><span class="line">按键：数字← /数字→</span><br><span class="line">4.末行模式下的快速移动方式：移动到指定的行</span><br><span class="line">按键：输入英文的:数字</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">2.模式间的切换</span><br><span class="line">命令模式下切换到末行模式英文下的:</span><br><span class="line">如果想要退出按 1次esc</span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      
      <category domain="http://shicheng.cool/categories/linux%E6%93%8D%E4%BD%9C%E5%91%BD%E4%BB%A4/">linux操作命令</category>
      
      
      
      <comments>http://shicheng.cool/2021/12/12/Linux/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>This is Html and CSS</title>
      <link>http://shicheng.cool/2021/12/12/JavaWeb/</link>
      <guid>http://shicheng.cool/2021/12/12/JavaWeb/</guid>
      <pubDate>Sun, 12 Dec 2021 05:41:37 GMT</pubDate>
      
        
        
      <description>&lt;h1 id=&quot;Hello-JavaWeb&quot;&gt;&lt;a href=&quot;#Hello-JavaWeb&quot; class=&quot;headerlink&quot; title=&quot;Hello JavaWeb&quot;&gt;&lt;/a&gt;Hello JavaWeb&lt;/h1&gt;&lt;h2 id=&quot;This-is-the-first-HTM</description>
        
      
      
      
      <content:encoded><![CDATA[<h1 id="Hello-JavaWeb"><a href="#Hello-JavaWeb" class="headerlink" title="Hello JavaWeb"></a>Hello JavaWeb</h1><h2 id="This-is-the-first-HTML"><a href="#This-is-the-first-HTML" class="headerlink" title="This is the first-HTML"></a>This is the first-HTML</h2>]]></content:encoded>
      
      
      <category domain="http://shicheng.cool/categories/%E5%89%8D%E7%AB%AF/">前端</category>
      
      
      
      <comments>http://shicheng.cool/2021/12/12/JavaWeb/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>Hello MyFirst Page</title>
      <link>http://shicheng.cool/2021/12/11/FirstPage/</link>
      <guid>http://shicheng.cool/2021/12/11/FirstPage/</guid>
      <pubDate>Sat, 11 Dec 2021 15:02:16 GMT</pubDate>
      
        
        
      <description>&lt;h1 id=&quot;Hello-Hexo&quot;&gt;&lt;a href=&quot;#Hello-Hexo&quot; class=&quot;headerlink&quot; title=&quot;Hello Hexo&quot;&gt;&lt;/a&gt;Hello Hexo&lt;/h1&gt;&lt;p&gt;Hello i am SC,This is My FirstGitHub P</description>
        
      
      
      
      <content:encoded><![CDATA[<h1 id="Hello-Hexo"><a href="#Hello-Hexo" class="headerlink" title="Hello Hexo"></a>Hello Hexo</h1><p>Hello i am SC,This is My FirstGitHub Page!</p><p>Hello BaoBaolin! This is me ,SC Nice to meet you!</p>]]></content:encoded>
      
      
      
      
      <comments>http://shicheng.cool/2021/12/11/FirstPage/#disqus_thread</comments>
      
    </item>
    
  </channel>
</rss>
